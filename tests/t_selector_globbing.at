AT_SETUP([b: and t: selector globbing])
MONOTONE_SETUP

ADD_FILE(testfile, [blah blah
])
COMMIT(testbranch)
R1=`BASE_REVISION`

SET_FILE(testfile, [stuff stuff
])
COMMIT(otherbranch)
R2=`BASE_REVISION`

SET_FILE(testfile, [thing thing
])
COMMIT(branch)
R3=`BASE_REVISION`

AT_CHECK(MONOTONE tag $R1 foo, [], [ignore], [ignore])
AT_CHECK(MONOTONE tag $R2 bar, [], [ignore], [ignore])
AT_CHECK(MONOTONE tag $R3 foobarbaz, [], [ignore], [ignore])

CHECK_SAME_CANONICALISED_STDOUT(MONOTONE automate select b:testbranch, echo $R1)
CHECK_SAME_CANONICALISED_STDOUT(MONOTONE automate select b:otherbranch, echo $R2)
CHECK_SAME_CANONICALISED_STDOUT(MONOTONE automate select b:branch, echo $R3)
CHECK_SAME_CANONICALISED_STDOUT(MONOTONE automate select b:test*, echo $R1)
CHECK_SAME_CANONICALISED_STDOUT(MONOTONE automate select b:*branch*, (echo $R1; echo $R2; echo $R3) | sort)

CHECK_SAME_CANONICALISED_STDOUT(MONOTONE automate select t:foo, echo $R1)
CHECK_SAME_CANONICALISED_STDOUT(MONOTONE automate select t:bar, echo $R2)
CHECK_SAME_CANONICALISED_STDOUT(MONOTONE automate select t:foobarbaz, echo $R3)
CHECK_SAME_CANONICALISED_STDOUT(MONOTONE automate select t:*bar, echo $R2)
CHECK_SAME_CANONICALISED_STDOUT(MONOTONE automate select t:*bar*, (echo $R2; echo $R3) | sort)

AT_CLEANUP