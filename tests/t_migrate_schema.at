AT_SETUP([(normal) schema migration])
MONOTONE_SETUP
NEED_UNGZB64

# This test ensures that 'monotone migrate' can take any old-format
# database and bring it forward to the current time; it is basically a
# compatibility test.  We actually don't test against old-format
# databases directly, because some old-format databases can't be read
# at all by a modern monotone -- you have to do a dump/load first.  So
# instead we store pre-dumped old-format databases.  So technically
# we're not checking that 'db migrate' can handle things, we're just
# checking that 'dump | load; db migrate' can handle things.  But that
# should be good enough.

# This means that every time the database schema is changed, you need
# to add a new piece to this test.  The way you do this is to run this
# test with the -d option, like so:
#   $ ./testsuite AUTOTEST_PATH=. -d 71
# this will cause autotest to leave behind the temporary files the
# test generates.  You want 'testsuite.dir/71/latest.db.dump'.  Gzip it,
# base64 it, and stick it in this file with the id of its schema.
# (E.g., gzip -c latest.db | mimencode > foo, then copy the contents
# of foo into this file.  Make sure when you do that that you put a newline
# between the end of the base64'd text and the closing ], or autotest
# will get very weirdly confused.)

######################################################################
## Do not touch this code; you'll have to regenerate all the test
## databases if you do!
######################################################################

# We don't want the standard db, we want full control ourselves
AT_CHECK(rm -f test.db)
AT_CHECK(MONOTONE db init)

# Put some random keys in, with and without corresponding private keys
AT_DATA(migrate_keys, [@<:@pubkey tester@test.net@:>@
MIGdMA0GCSqGSIb3DQEBAQUAA4GLADCBhwKBgQCfN/cAMabgb6T7m8ksGnpQ7LO6hOdnc/7V
yivrRGtmpwSItljht1bmgLQF37KiSPoMEDUb1stfKxaMsYiy8iTyoQ+M2EVFP37n2rtnNZ0H
oVcQd2sRsCerQFh9nslRPymlkQXUlOiNFN6RlFNcdjkucqNe+YorFX21EYw7XuT5XwIBEQ==
@<:@end@:>@
@<:@pubkey njs@pobox.com@:>@
MIGdMA0GCSqGSIb3DQEBAQUAA4GLADCBhwKBgQC54vVjrrqYoTfPTgWm6JpuL+kOERcN2OSc
BsWq6cb4Wm3nlymwVqJJywq6cbfygUYwmqyiRLPxRosfLGu228AhEzaM4JbAH1pgg7CwvvVd
fHRXNAXEMgO89gBjkkecxLi4U/T67DrLjkRPAilCgWLZNv8YeOG9XAPegWyr7hNA9wIBEQ==
@<:@end@:>@
@<:@privkey tester@test.net@:>@
npy0jyqbZdylFkMjdR9OvlqmDHuBGXpGFPt94h96aG+Lp+OdBCmWx8GueHk8FKkexwPqhRBM
PPopUeuwqxuSX+yEodMl5IHBmin0nLnbOeBjtasjemBFEmdNl/jPDF/AeQ2WHhanB731dSQc
vzLOQfKAYmfk56PPULi9oJJNUxaCkvsWtvaI+HUHZrjyyV7dA4Vsc6Jvx2Yf1+MdDAEGk/Rw
ZtP0LmuoiyvRDFqBF8aTmnotyb4kRKohnJ7VF+y6hYvmtMpM3TKnpR7EbojBzNPqKuO7nPUz
jGxA7F84O24Vbf128PNSI5vj4istow26aPjn28qPjfRrkV30WLL/dXfYJkfkTqglYnoEXvF/
xZoVxxNeAX58mgy0A1ErVxv8U7TwuP983GHEpLwy3gbiP+9akAJCr8r823DHmQqq5QDELibP
cuXZfOttpfVRkcbMhjeF0M6czc4HoKgHTAnf/18hzdZwGX/WWvRIBHImbUJ+mDbp2ByDTfKf
ErGXSvZ3HxCqBD8yx1SnXhV8IDHaBmV9wwYcN+H2cxOWGZk7g7xJS19+a3UQB3c3sSXQVJBp
6QpCZgysxkZwzuXDzzLZPT9SLZz4K2p7+7BwMbpy9ZxcyAzmiEtpA24UP06jtjFN7WcXAdx/
E5Gmoe9b1EiXWdReHjUGpc6k0LQ0PPXAwqrcGdwYbOLDZ5xsQ5AsEYSFtyTS60D1nHBcdNmW
M0eOUJFdJf/uNe/2EApc3a8TyEkZtVqiYtOVV3qDB9NmU4bVOkDqzl1F7zJwATWbmasSdkM3
6lxDkczBfCrEjH5p5Y8DU+ge4e4LRtknY9oBOJ7EQO0twYJg3k0=
@<:@end@:>@
])
AT_CHECK(MONOTONE read < migrate_keys, [], [ignore], [ignore])

ADD_FILE(testfile1, [f1v1
])
ADD_FILE(testfile2, [f2v1
])
COMMIT(testbranch1)
REV=`BASE_REVISION`

AT_CHECK(MONOTONE cert $REV somekey somevalue, [], [ignore], [ignore])

SET_FILE(testfile1, [f1v2
])
ADD_FILE(testfile3, [f3v1
])
COMMIT(testbranch2)

REVERT_TO($REV)

SET_FILE(testfile2, [f2v2
])
ADD_FILE(testfile4, [f4v1
])
COMMIT(testbranch1)

AT_CHECK(MONOTONE propagate testbranch2 testbranch1, [], [ignore], [ignore])
AT_CHECK(MONOTONE update, [], [ignore], [ignore])

AT_CHECK(MONOTONE drop testfile1, [], [ignore], [ignore])
SET_FILE(testfile4, [f4v2
])
COMMIT(testbranch3)

# Exception to this code being untouchable:
# This line may have to be modified at a later date; this won't cause
# any problem, as long as it's replaced by code with the same effect.
AT_CHECK(MONOTONE db execute "DELETE FROM revision_certs WHERE name = 'date'", [], [ignore], [ignore])

AT_CHECK(cp test.db latest.db)
AT_CHECK(MONOTONE --db=latest.db db dump, [], [stdout], [ignore])
AT_CHECK(cp stdout latest.db.dump)

######################################################################
## End untouchable code
######################################################################

# Usage: CHECK_MIGRATE_FROM(<schema id>, <encoded dumped db with this schema>)
m4_define([CHECK_MIGRATE_FROM], [
AT_DATA($1.db.dumped.gz.b64, $2)
UNGZB64($1.db.dumped.gz.b64, $1.db.dumped)
AT_CHECK(MONOTONE --db=$1.db db load < $1.db.dumped, [], [ignore], [ignore])
# verify that the db actually has the claimed schema
AT_CHECK(MONOTONE --db=$1.db db version, [], [stdout], [ignore])
AT_CHECK(grep -q $1 stdout)
# now do the actual migration
AT_CHECK(MONOTONE --db=$1.db db migrate, [], [ignore], [ignore])
CHECK_SAME_DB_CONTENTS($1.db, latest.db)
])


CHECK_MIGRATE_FROM([c1e86588e11ad07fa53e5d294edc043ce1d4005a],
[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
])

AT_CLEANUP
