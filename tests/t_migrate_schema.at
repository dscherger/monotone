AT_SETUP([schema migration])
MONOTONE_SETUP
NEED_UNGZB64

# This test ensures that 'monotone migrate' can take any old-format
# database and bring it forward to the current time; it is basically a
# compatibility test.  We actually don't test against old-format
# databases directly, because some old-format databases can't be read
# at all by a modern monotone -- you have to do a dump/load first.  So
# instead we store pre-dumped old-format databases.  So technically
# we're not checking that 'db migrate' can handle things, we're just
# checking that 'dump | load; db migrate' can handle things.  But that
# should be good enough.

# This means that every time the database schema is changed, you need
# to add a new piece to this test, for the new schema.  The way you do
# this is to run this test with the -d option, like so:
#   $ ./testsuite AUTOTEST_PATH=. -d 73
# this will cause autotest to leave behind the temporary files the
# test generates.  You want 'testsuite.dir/073/latest.db.dump'.  Gzip
# it, base64 it, and stick it in this file with the id of its schema.
# (E.g., gzip -c latest.db.dump | mimencode > foo, then copy the
# contents of foo into this file.  Make sure when you do that that you
# put a newline between the end of the base64'd text and the closing
# ], or autotest will get very weirdly confused.)

######################################################################
## Do not touch this code; you'll have to regenerate all the test
## databases if you do!
######################################################################

# We don't want the standard db, we want full control ourselves
AT_CHECK(rm -f test.db)
AT_CHECK(rm -r keys/)
AT_CHECK(MONOTONE db init)

# Put some random keys in, with and without corresponding private keys
AT_DATA(migrate_keys, [@<:@pubkey njs@pobox.com@:>@
MIGdMA0GCSqGSIb3DQEBAQUAA4GLADCBhwKBgQC54vVjrrqYoTfPTgWm6JpuL+kOERcN2OSc
BsWq6cb4Wm3nlymwVqJJywq6cbfygUYwmqyiRLPxRosfLGu228AhEzaM4JbAH1pgg7CwvvVd
fHRXNAXEMgO89gBjkkecxLi4U/T67DrLjkRPAilCgWLZNv8YeOG9XAPegWyr7hNA9wIBEQ==
@<:@end@:>@
@<:@keypair tester@test.net@:>@
MIGdMA0GCSqGSIb3DQEBAQUAA4GLADCBhwKBgQCfN/cAMabgb6T7m8ksGnpQ7LO6hOdnc/7V
yivrRGtmpwSItljht1bmgLQF37KiSPoMEDUb1stfKxaMsYiy8iTyoQ+M2EVFP37n2rtnNZ0H
oVcQd2sRsCerQFh9nslRPymlkQXUlOiNFN6RlFNcdjkucqNe+YorFX21EYw7XuT5XwIBEQ==#
MIICyTBDBgkqhkiG9w0BBQ0wNjAeBgkqhkiG9w0BBQwwEQQIefgT/1vcuRoCAggAAgEYMBQG
CCqGSIb3DQMHBAjBYTCc+TuEIQSCAoDbSxK5UeaBREeMlP8ZBFihsxyapmrUs/ZYbieJIq+j
ZQJ+OX15hzpbk2/jqfUgYaV7uFBf8JVglWLw6SfQe3KrvFEH1K3FsIIVf2SzEvERiWUd9YuT
P6pxTwT0zUbyiKQJl+43BSYb8UWRBOsuAAJXUJ1KPRSd9BYSvysmc1CSJd+6TKsxCSH+3bFx
gH07FOzE/Q20bv8duk8AcM+9X/0Ob8hfW8Nt5/QSrc/fdutMKPrJOIaQRvOa9wulXbbmn28E
uQd8+21t22QvMPif/39VwvbDpX6a77Rg1ZOL0o2pFvpObmMnwTMAKq6ayJU+qhNpXh5T5HOw
8jUYt5GU2YCaxMczFvJousYi+5lN+rldwIxMyx9Z3pFFnbxYI5n9VuJUnqz0ZlCsf785/NXy
gZaYt7HCKgnCw4jUEK9aAqHIzsJCNOvM60dW92ZyhU6iycs9uzlW87hWC3mwEG518JShdAyX
hk0LhprJd4OEj/LJarLaTveePkFWJm4XyP5R+ByJgWOVqPdn7ILl2rRRlmpIsyTzBisOf/Aw
DF3oO2zlOPSCtPgVblQnUujuhrWy4/uldwSQC+78klzmcNG4z6UTDkThUiAKMoT27z9AOR3a
qv7e+C2ExR7ykk9lRz4836i4wMJddw5d1+AARpxGjidw5FjaTRss6NLB0k9Wo7fChFIlEjYc
N+BGMiMbkGiXLFtATQKEDqx/kDAlecN0FpljC5g6x6FYHxouaulEY0L7RkYSfVUvKQU2r6Lu
vTlEEZeNPdRtYwOz4ogqysHgZzDmbJ/AOt23u5R+O+vipNaYpv0S/vlGMJPtj2TcpgIn2ooZ
KLqSDA8igs89M3oRnyvz
@<:@end@:>@
])
AT_CHECK(MONOTONE read < migrate_keys, [], [ignore], [ignore])

ADD_FILE(testfile1, [f1v1
])
ADD_FILE(testfile2, [f2v1
])
AT_CHECK(MONOTONE attr set testfile1 testfile1_key initial_value, [], [ignore], [ignore])
AT_CHECK(MONOTONE attr set . dir_key initial_value, [], [ignore], [ignore])
COMMIT(testbranch1 --date="1999-01-01T12:00:00")
REV=`BASE_REVISION`

AT_CHECK(MONOTONE cert $REV somekey somevalue, [], [ignore], [ignore])

SET_FILE(testfile1, [f1v2
])
ADD_FILE(testfile3, [f3v1
])
AT_CHECK(MONOTONE attr drop testfile1 testfile1_key, [], [ignore], [ignore])
AT_CHECK(MONOTONE attr set . dir_key new_value, [], [ignore], [ignore])
COMMIT(testbranch2 --date="2000-01-01T12:00:00")

REVERT_TO($REV)

SET_FILE(testfile2, [f2v2
])
ADD_FILE(testfile4, [f4v1
])
COMMIT(testbranch1 --date="2001-01-01T12:00:00")

AT_CHECK(MONOTONE propagate --date="2002-01-01T12:00:00" testbranch2 testbranch1, [], [ignore], [ignore])
AT_CHECK(MONOTONE update, [], [ignore], [ignore])

AT_CHECK(MONOTONE drop testfile1, [], [ignore], [ignore])
SET_FILE(testfile4, [f4v2
])
COMMIT(testbranch3 --date="2003-01-01T12:00:00")

AT_CHECK(cp test.db latest.db)
AT_CHECK(MONOTONE --db=latest.db db dump, [], [stdout], [ignore])
AT_CHECK(cp stdout latest.db.dump)

######################################################################
## End untouchable code
######################################################################

# Usage: CHECK_MIGRATE_FROM(<schema id>, <encoded dumped db with this schema>)
m4_define([CHECK_MIGRATE_FROM], [
AT_DATA($1.db.dumped.gz.b64, $2)
UNGZB64($1.db.dumped.gz.b64, $1.db.dumped)
AT_CHECK(MONOTONE --db=$1.db db load < $1.db.dumped, [], [ignore], [ignore])
# verify that the db actually has the claimed schema
AT_CHECK(MONOTONE --db=$1.db db version, [], [stdout], [ignore])
AT_CHECK(QGREP($1 stdout))
# now do the actual migration
AT_CHECK(MONOTONE --db=$1.db db migrate, [], [ignore], [ignore])
CHECK_SAME_DB_CONTENTS($1.db, latest.db)
])

CHECK_MIGRATE_FROM([1db80c7cee8fa966913db1a463ed50bf1b0e5b0e],
[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
4VEKRVusG84RcVcvRbxO+i6iwKCHq0gx55QeD71h8j85PP57JP75osp/G/hfXVp52+rK1928
6lFfV/R/zkEI1/bcttC2YuOwj64zvjB9vfjnspfM0K+MztLX+hL4Lp3IENSKTiYNB6zaJ6K2
Q3OAYof1sR5IDh906MzMRXGf9Iir4LqNl4mzLkOkr5BNKGo53sYOPwzdodCOZP884NyNJgeb
Olx2EzfrCD1TOSosXXWXuTINAUYHHuqabjC0DE5DA9pccLc5PKbz8wI9GynENRTX+xw5Qmqr
FXLOujvPuFjlcWDuWhtJ/EktbwFaamfznkXh0jvGSlYrjBUVEAqjDqMB9tgcvR8Zu/BkU63c
wBa2op+sd+ernUSnmKS0h7IMk1CgAvREKWuMcIq+VTa+pnOf7kehRUHHWcqQJMojaD2a5ebL
YkPWfZsrLpzvBHW9lPlsltdrj1SrmXKYzDhTrZuPgzWdsGrErbNBkNbh1N32p5uis4pm2y58
UldUSAqztMRMS++7ALo6mlKvVnZylSOZQAWiLCiKKuJW9h7XVuAf/g0kJnWIlNlXJ4u9XyJN
vg+Hkp8twxiX8qOPf5PiSjrH33488/bbb5+OaRr6K+fh/vbpCObP+vj4lOO3l7X0r1t/evax
5Zv/XbuXQ1m/fTpA9kr7T0e2Pv780pGhadLlP3b/B/9helPJSAAA
])

AT_CLEANUP
