AT_SETUP([schema migration])
MONOTONE_SETUP
NEED_UNGZB64

# This test ensures that 'monotone migrate' can take any old-format
# database and bring it forward to the current time; it is basically a
# compatibility test.  We actually don't test against old-format
# databases directly, because some old-format databases can't be read
# at all by a modern monotone -- you have to do a dump/load first.  So
# instead we store pre-dumped old-format databases.  So technically
# we're not checking that 'db migrate' can handle things, we're just
# checking that 'dump | load; db migrate' can handle things.  But that
# should be good enough.

# This means that every time the database schema is changed, you need
# to add a new piece to this test, for the new schema.  The way you do
# this is to run this test with the -d option, like so:
#   $ ./testsuite AUTOTEST_PATH=. -d 73
# this will cause autotest to leave behind the temporary files the
# test generates.  You want 'testsuite.dir/073/latest.db.dump'.  Gzip
# it, base64 it, and stick it in this file with the id of its schema.
# (E.g., gzip -c latest.db.dump | mimencode > foo, then copy the
# contents of foo into this file.  Make sure when you do that that you
# put a newline between the end of the base64'd text and the closing
# ], or autotest will get very weirdly confused.)

######################################################################
## Do not touch this code; you'll have to regenerate all the test
## databases if you do!
######################################################################

# We don't want the standard db, we want full control ourselves
AT_CHECK(rm -f test.db)
AT_CHECK(rm -r keys/)
AT_CHECK(MONOTONE db init)

# Put some random keys in, with and without corresponding private keys
AT_DATA(migrate_keys, [@<:@pubkey njs@pobox.com@:>@
MIGdMA0GCSqGSIb3DQEBAQUAA4GLADCBhwKBgQC54vVjrrqYoTfPTgWm6JpuL+kOERcN2OSc
BsWq6cb4Wm3nlymwVqJJywq6cbfygUYwmqyiRLPxRosfLGu228AhEzaM4JbAH1pgg7CwvvVd
fHRXNAXEMgO89gBjkkecxLi4U/T67DrLjkRPAilCgWLZNv8YeOG9XAPegWyr7hNA9wIBEQ==
@<:@end@:>@
@<:@keypair tester@test.net@:>@
MIGdMA0GCSqGSIb3DQEBAQUAA4GLADCBhwKBgQCfN/cAMabgb6T7m8ksGnpQ7LO6hOdnc/7V
yivrRGtmpwSItljht1bmgLQF37KiSPoMEDUb1stfKxaMsYiy8iTyoQ+M2EVFP37n2rtnNZ0H
oVcQd2sRsCerQFh9nslRPymlkQXUlOiNFN6RlFNcdjkucqNe+YorFX21EYw7XuT5XwIBEQ==#
MIICyTBDBgkqhkiG9w0BBQ0wNjAeBgkqhkiG9w0BBQwwEQQIefgT/1vcuRoCAggAAgEYMBQG
CCqGSIb3DQMHBAjBYTCc+TuEIQSCAoDbSxK5UeaBREeMlP8ZBFihsxyapmrUs/ZYbieJIq+j
ZQJ+OX15hzpbk2/jqfUgYaV7uFBf8JVglWLw6SfQe3KrvFEH1K3FsIIVf2SzEvERiWUd9YuT
P6pxTwT0zUbyiKQJl+43BSYb8UWRBOsuAAJXUJ1KPRSd9BYSvysmc1CSJd+6TKsxCSH+3bFx
gH07FOzE/Q20bv8duk8AcM+9X/0Ob8hfW8Nt5/QSrc/fdutMKPrJOIaQRvOa9wulXbbmn28E
uQd8+21t22QvMPif/39VwvbDpX6a77Rg1ZOL0o2pFvpObmMnwTMAKq6ayJU+qhNpXh5T5HOw
8jUYt5GU2YCaxMczFvJousYi+5lN+rldwIxMyx9Z3pFFnbxYI5n9VuJUnqz0ZlCsf785/NXy
gZaYt7HCKgnCw4jUEK9aAqHIzsJCNOvM60dW92ZyhU6iycs9uzlW87hWC3mwEG518JShdAyX
hk0LhprJd4OEj/LJarLaTveePkFWJm4XyP5R+ByJgWOVqPdn7ILl2rRRlmpIsyTzBisOf/Aw
DF3oO2zlOPSCtPgVblQnUujuhrWy4/uldwSQC+78klzmcNG4z6UTDkThUiAKMoT27z9AOR3a
qv7e+C2ExR7ykk9lRz4836i4wMJddw5d1+AARpxGjidw5FjaTRss6NLB0k9Wo7fChFIlEjYc
N+BGMiMbkGiXLFtATQKEDqx/kDAlecN0FpljC5g6x6FYHxouaulEY0L7RkYSfVUvKQU2r6Lu
vTlEEZeNPdRtYwOz4ogqysHgZzDmbJ/AOt23u5R+O+vipNaYpv0S/vlGMJPtj2TcpgIn2ooZ
KLqSDA8igs89M3oRnyvz
@<:@end@:>@
])
AT_CHECK(MONOTONE read < migrate_keys, [], [ignore], [ignore])

ADD_FILE(testfile1, [f1v1
])
ADD_FILE(testfile2, [f2v1
])
AT_CHECK(MONOTONE attr set testfile1 testfile1_key initial_value, [], [ignore], [ignore])
AT_CHECK(MONOTONE attr set . dir_key initial_value, [], [ignore], [ignore])
COMMIT(testbranch1 --date="1999-01-01T12:00:00")
REV=`BASE_REVISION`

AT_CHECK(MONOTONE cert $REV somekey somevalue, [], [ignore], [ignore])

SET_FILE(testfile1, [f1v2
])
ADD_FILE(testfile3, [f3v1
])
AT_CHECK(MONOTONE attr drop testfile1 testfile1_key, [], [ignore], [ignore])
AT_CHECK(MONOTONE attr set . dir_key new_value, [], [ignore], [ignore])
COMMIT(testbranch2 --date="2000-01-01T12:00:00")

REVERT_TO($REV)

SET_FILE(testfile2, [f2v2
])
ADD_FILE(testfile4, [f4v1
])
COMMIT(testbranch1 --date="2001-01-01T12:00:00")

AT_CHECK(MONOTONE propagate --date="2002-01-01T12:00:00" testbranch2 testbranch1, [], [ignore], [ignore])
AT_CHECK(MONOTONE update, [], [ignore], [ignore])

AT_CHECK(MONOTONE drop testfile1, [], [ignore], [ignore])
SET_FILE(testfile4, [f4v2
])
COMMIT(testbranch3 --date="2003-01-01T12:00:00")

AT_CHECK(cp test.db latest.db)
AT_CHECK(MONOTONE --db=latest.db db dump, [], [stdout], [ignore])
AT_CHECK(cp stdout latest.db.dump)

######################################################################
## End untouchable code
######################################################################

# Usage: CHECK_MIGRATE_FROM(<schema id>, <encoded dumped db with this schema>)
m4_define([CHECK_MIGRATE_FROM], [
AT_DATA($1.db.dumped.gz.b64, $2)
UNGZB64($1.db.dumped.gz.b64, $1.db.dumped)
AT_CHECK(MONOTONE --db=$1.db db load < $1.db.dumped, [], [ignore], [ignore])
# verify that the db actually has the claimed schema
AT_CHECK(MONOTONE --db=$1.db db version, [], [stdout], [ignore])
AT_CHECK(QGREP($1 stdout))
# now do the actual migration
AT_CHECK(MONOTONE --db=$1.db db migrate, [], [ignore], [ignore])
CHECK_SAME_DB_CONTENTS($1.db, latest.db)
])

CHECK_MIGRATE_FROM([1db80c7cee8fa966913db1a463ed50bf1b0e5b0e],
[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
])

AT_CLEANUP
