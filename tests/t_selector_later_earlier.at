AT_SETUP([check later and earlier selectors])
MONOTONE_SETUP

ADD_FILE(testfile, [this is just a file
])
AT_CHECK(cp testfile testfile1)
AT_CHECK(MONOTONE commit --date="2005-03-11T20:33:01" --branch=foo --message=march, [], [ignore], [ignore])
AT_CHECK(echo "`BASE_REVISION`" , [], [stdout], [ignore])
AT_CHECK(CANONICALISE(stdout))
AT_CHECK(mv stdout first)

AT_DATA(testfile, [Now, this is a different file
])
AT_CHECK(cp testfile testfile2)
AT_CHECK(MONOTONE commit --date="2005-04-22T12:15:00" --branch=foo --message=aprila, [], [ignore], [ignore])
AT_CHECK(echo "`BASE_REVISION`" , [], [stdout], [ignore])
AT_CHECK(CANONICALISE(stdout))
AT_CHECK(mv stdout second)

AT_DATA(testfile, [And we change it a third time
])
AT_CHECK(cp testfile testfile3)
AT_CHECK(MONOTONE commit --date="2005-04-24T07:44:39" --branch=foo --message=aprilb, [], [ignore], [ignore])
AT_CHECK(echo "`BASE_REVISION`" , [], [stdout], [ignore])
AT_CHECK(CANONICALISE(stdout))
AT_CHECK(mv stdout third)

# -------------------
# check 'earlier or equal' selector
# -------------------

# this time is just 'before' the first commit, thus no output should come
AT_CHECK(RAW_MONOTONE automate select "e:2005-03-11T20:33:00", [], [stdout], [ignore])
AT_CHECK(CANONICALISE(stdout))
AT_CHECK(mv stdout nosel)
AT_CHECK(test -f nosel -a ! -s nosel)

# these sels should extract only the first commit
# Note: the second sel is the exact time of the first commit. 
AT_CHECK(cp -f first expout)
CHECK_SAME_CANONICALISED_STDOUT(cat first, RAW_MONOTONE automate select "e:2005-04")
CHECK_SAME_CANONICALISED_STDOUT(cat first, RAW_MONOTONE automate select "e:2005-03-11T20:33:01")
CHECK_SAME_CANONICALISED_STDOUT(cat first, RAW_MONOTONE automate select "e:2005-03-11T20:33:02")

# now the first two
CHECK_SAME_CANONICALISED_STDOUT(cat second first, RAW_MONOTONE automate select "e:2005-04-23")

# finally, all the files
AT_CHECK(RAW_MONOTONE automate select "e:2005-04-30", [], [stdout], [ignore])
AT_CHECK(CANONICALISE(stdout))
AT_CHECK(mv stdout a_s)
AT_CHECK(test 3 -eq "`wc -l <a_s`")
AT_CHECK(RAW_MONOTONE automate select "e:2006-07", [], [stdout], [ignore])
AT_CHECK(CANONICALISE(stdout))
AT_CHECK(mv stdout a_s)
AT_CHECK(test 3 -eq "`wc -l <a_s`")

# -------------------
# check 'later' selector
# -------------------

# unlike 'earlier', the 'later' selector matches only strictly greater
# commit times.  Giving a time equal to that of third commit thus
# should not match anything
AT_CHECK(RAW_MONOTONE automate select "l:2005-04-24T07:44:39", [], [stdout], [ignore])
AT_CHECK(mv stdout nosel)
AT_CHECK(test -f nosel -a ! -s nosel)
AT_CHECK(RAW_MONOTONE automate select "l:2005-05", [], [stdout], [ignore])
AT_CHECK(mv stdout nosel)
AT_CHECK(test -f nosel -a ! -s nosel)

# these sels should extract only the last commit
# Note: the second sel is one sec before the last commit
AT_CHECK(cp -f third expout)
AT_CHECK(RAW_MONOTONE automate select "l:2005-04-23", [], [expout], [ignore])
AT_CHECK(RAW_MONOTONE automate select "l:2005-04-24T07:44:38", [], [expout], [ignore])

# now we match the second and third commit
AT_CHECK(cat third second, [], [stdout], [ignore])
AT_CHECK(mv stdout expout)
AT_CHECK(RAW_MONOTONE automate select "l:2005-04-21", [], [expout], [ignore])

# finally, all the files
AT_CHECK(RAW_MONOTONE automate select "l:2005-03", [], [stdout], [ignore])
AT_CHECK(mv stdout a_s)
AT_CHECK(test 3 -eq "`wc -l <a_s`")
AT_CHECK(RAW_MONOTONE automate select "l:2003-01", [], [stdout], [ignore])
AT_CHECK(mv stdout a_s)
AT_CHECK(test 3 -eq "`wc -l <a_s`")

# -------------------
# check combined selectors
# -------------------

# matching only the second commit
AT_CHECK(cp -f second expout)
AT_CHECK(RAW_MONOTONE automate select "l:2005-04-01/e:2005-04-23", [], [expout], [ignore])
AT_CHECK(RAW_MONOTONE automate select "l:2005-04-01/e:2005-04-22T20:00:00", [], [expout], [ignore])
AT_CHECK(RAW_MONOTONE automate select "l:2005-04-21T23:01:00/e:2005-04-22T20:00:00", [], [expout], [ignore])

# non overlapping intervals should not match, even if the single selector 
# will 
AT_CHECK(RAW_MONOTONE automate select "l:2005-04-22/e:2005-04-21", [], [stdout], [ignore])
AT_CHECK(CANONICALISE(stdout))
AT_CHECK(mv stdout nosel)
AT_CHECK(test -f nosel -a ! -s nosel)

AT_CLEANUP
