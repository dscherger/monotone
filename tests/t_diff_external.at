AT_SETUP([diff --external])
MONOTONE_SETUP

ADD_FILE(testfile, [foo bar
])
COMMIT(testbranch)
OLD_SHA=`SHA1(testfile)`
AT_CHECK(cp testfile old_testfile)

SET_FILE(testfile, [stuff stuff
])
NEW_SHA=`SHA1(testfile)`

AT_DATA(testhook.lua, [function external_diff(file_path, data_old, data_new, is_binary, diff_args, rev_old, rev_new)
  io.write("file_path: " .. file_path .. "\n")
  f = io.open("old_version", "w")
  f:write(data_old)
  io.close(f)
  f = io.open("new_version", "w")
  f:write(data_new)
  io.close(f)
  if diff_args == nil then
    io.write("diff_args is NIL\n")
  else
    io.write("diff_args: " .. diff_args .. "\n")
  end
  io.write("rev_old: " .. rev_old .. "\n")
  io.write("rev_new: " .. rev_new .. "\n")
end
])

AT_CHECK(MONOTONE --rcfile=testhook.lua diff --external, [], [stdout], [ignore])
AT_CHECK(CANONICALISE(stdout))
AT_CHECK(CANONICALISE(old_version))
AT_CHECK(CANONICALISE(new_version))
AT_CHECK(QGREP('file_path: testfile' stdout))
AT_CHECK(cmp old_version old_testfile)
AT_CHECK(cmp new_version testfile)
AT_CHECK(QGREP('diff_args is NIL' stdout))
AT_CHECK(QGREP("rev_old: $OLD_SHA" stdout))
AT_CHECK(QGREP("rev_new: $NEW_SHA" stdout))

AT_CHECK(MONOTONE --rcfile=testhook.lua diff --external --diff-args="-foobar", [], [stdout], [ignore])
AT_CHECK(CANONICALISE(stdout))
AT_CHECK(CANONICALISE(old_version))
AT_CHECK(CANONICALISE(new_version))
AT_CHECK(QGREP('file_path: testfile' stdout))
AT_CHECK(cmp old_version old_testfile)
AT_CHECK(cmp new_version testfile)
AT_CHECK(QGREP('diff_args: -foobar' stdout))
AT_CHECK(QGREP("rev_old: $OLD_SHA" stdout))
AT_CHECK(QGREP("rev_new: $NEW_SHA" stdout))

AT_CHECK(MONOTONE --rcfile=testhook.lua diff --external --diff-args="", [], [stdout], [ignore])
AT_CHECK(CANONICALISE(stdout))
AT_CHECK(CANONICALISE(old_version))
AT_CHECK(CANONICALISE(new_version))
AT_CHECK(QGREP('file_path: testfile' stdout))
AT_CHECK(cmp old_version old_testfile)
AT_CHECK(cmp new_version testfile)
AT_CHECK(QEGREP('^diff_args: $' stdout))
AT_CHECK(QGREP("rev_old: $OLD_SHA" stdout))
AT_CHECK(QGREP("rev_new: $NEW_SHA" stdout))

AT_CLEANUP
