#  -*- Autoconf -*-

AT_SETUP([exchanging work via netsync])

MONOTONE_SETUP
AT_CHECK(cp test.db test2.db)

AT_DATA(netsync.lua, [
function get_netsync_read_permitted(collection, identity)
	return true
end

function get_netsync_write_permitted(collection, identity)
	return true
end
])

AT_DATA(testfile, [version 0 of test file
])
AT_CHECK(MONOTONE add testfile, [], [ignore], [ignore])
AT_CHECK(MONOTONE --branch=testbranch --rcfile=netsync.lua commit blah-blah, [], [ignore], [ignore])
F_VER0=`SHA1(testfile)`
VER0=`SHA1(MT/manifest)`

AT_DATA(testfile, [version 1 of test file
])
AT_CHECK(MONOTONE --rcfile=netsync.lua commit blah-blah, [], [ignore], [ignore])
F_VER1=`SHA1(testfile)`
VER1=`SHA1(MT/manifest)`

killall -q -KILL monotone
         MONOTONE --rcfile=netsync.lua               serve 127.0.0.1:5555 testbranch &
sleep 5
AT_CHECK(MONOTONE --rcfile=netsync.lua --db=test2.db pull 127.0.0.1:5555 testbranch, [], [ignore], [ignore])
killall -q -KILL monotone

AT_CHECK(MONOTONE --db=test2.db ls certs $VER0, [], [stdout])
AT_CHECK(mv stdout certs, [], [ignore])
AT_CHECK(grep date certs, [], [ignore])
AT_CHECK(grep author certs, [], [ignore])
AT_CHECK(grep branch certs, [], [ignore])
AT_CHECK(grep changelog certs, [], [ignore])
AT_CHECK(grep bad certs, [1], [ignore])

AT_CHECK(MONOTONE --db=test2.db ls certs $VER1, [], [stdout])
AT_CHECK(mv stdout certs, [], [ignore])
AT_CHECK(grep date certs, [], [ignore])
AT_CHECK(grep author certs, [], [ignore])
AT_CHECK(grep branch certs, [], [ignore])
AT_CHECK(grep changelog certs, [], [ignore])
AT_CHECK(grep ancestor certs, [], [ignore])
AT_CHECK(grep bad certs, [1], [ignore])

AT_CHECK(MONOTONE --db=test2.db cat manifest $VER0, [], [stdout])
CHK=`SHA1(stdout)`
AT_CHECK(test $CHK == $VER0)

AT_CHECK(MONOTONE --db=test2.db cat manifest $VER1, [], [stdout])
CHK=`SHA1(stdout)`
AT_CHECK(test $CHK == $VER1)

AT_CHECK(MONOTONE --db=test2.db cat file $F_VER0, [], [stdout])
CHK=`SHA1(stdout)`
AT_CHECK(test $CHK == $F_VER0)

AT_CHECK(MONOTONE --db=test2.db cat file $F_VER1, [], [stdout])
CHK=`SHA1(stdout)`
AT_CHECK(test $CHK == $F_VER1)

AT_CHECK(MONOTONE db info, [], [stdout])
INFO1=`SHA1(stdout)`
AT_CHECK(MONOTONE --db=test2.db db info, [], [stdout])
INFO2=`SHA1(stdout)`
AT_CHECK(test $INFO1 == $INFO2)

AT_CLEANUP
