#  -*- Autoconf -*-

AT_SETUP([updating to a given revision])

MONOTONE_SETUP

AT_DATA(root, [first line of the file
second line of the file
third line of the file
])
AT_DATA(middle, [first line of the file
an insertion between first and second
second line of the file
third line of the file
])
AT_DATA(left-leaf, [first line of the file
an insertion between first and second
second line of the file
an insertion between second and third
third line of the file
])
AT_DATA(right-leaf, [first line of the file
an insertion between first and second
a changed second line of the file
third line of the file
])
AT_DATA(modified-left-leaf, [first line of the file
an insertion between first and second
second line of the file
an insertion between second and third
third line of the file
a new fourth line
])
AT_DATA(modified-root, [first line of the file
second line of the file
third line of the file
a new fourth line
])

# Create root revision.
AT_CHECK(cp root testfile)
AT_CHECK(MONOTONE add testfile, [], [ignore], [ignore])
AT_CHECK(MONOTONE --branch=testbranch commit --message blah-blah, [], [ignore], [ignore])
ROOT_R_SHA=`BASE_REVISION`

# Create middle revision based off root.
AT_CHECK(cp middle testfile)
AT_CHECK(MONOTONE commit --message blah-blah, [], [ignore], [ignore])
MIDDLE_R_SHA=`BASE_REVISION`

# Create leaf revision based off middle.
AT_CHECK(cp left-leaf testfile)
AT_CHECK(MONOTONE commit --message blah-blah, [], [ignore], [ignore])g
LEFT_LEAF_R_SHA=`BASE_REVISION`

# Test going backward in the revision tree.
AT_CHECK(MONOTONE update --revision=$ROOT_R_SHA, [], [ignore], [ignore])
diff -u testfile root
AT_CHECK(cmp testfile root, [], [ignore])

# Test going forward in the revision tree.
AT_CHECK(MONOTONE update --revision=$MIDDLE_R_SHA, [], [ignore], [ignore])
AT_CHECK(cmp testfile middle, [], [ignore])

# Create a fork from middle.
AT_CHECK(cp right-leaf testfile)
AT_CHECK(MONOTONE commit --message blah-blah, [], [ignore], [ignore])
RIGHT_LEAF_R_SHA=`BASE_REVISION`

# Test going from the right left to the left leaf via the common ancestor.
AT_CHECK(MONOTONE update --revision=$LEFT_LEAF_R_SHA, [], [ignore], [ignore])
AT_CHECK(cmp testfile left-leaf, [], [ignore])

# Test that working copy changes are kept while going backward.
AT_CHECK(cp modified-left-leaf testfile)
AT_CHECK(MONOTONE update --revision=$ROOT_R_SHA, [], [ignore], [ignore])
AT_CHECK(cmp testfile modified-root, [], [ignore])

AT_CLEANUP
