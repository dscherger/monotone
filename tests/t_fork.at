#  -*- Autoconf -*-

AT_SETUP([creating a fork])

MONOTONE_SETUP


AT_DATA(testfile, [version 0 of test file
])

AT_CHECK(MONOTONE add testfile, [], [ignore], [ignore])
AT_CHECK(MONOTONE --branch=testbranch commit --message=blah-blah, [], [ignore], [ignore])
ROOT_R_SHA=`BASE_REVISION`
ROOT_F_SHA=`SHA1(testfile)`

AT_DATA(testfile, [left version of fork
])
AT_CHECK(MONOTONE commit --message=blah-blah, [], [ignore], [ignore])
LEFT_R_SHA=`BASE_REVISION`
LEFT_F_SHA=`SHA1(testfile)`
AT_CHECK(test $LEFT_R_SHA != $ROOT_R_SHA)
AT_CHECK(test $LEFT_F_SHA != $ROOT_F_SHA)

AT_CHECK(MONOTONE --branch=testbranch heads, [], [stdout], [ignore])
AT_CHECK(grep empty stdout, [1], [ignore])

PROBE_NODE(testfile, $ROOT_R_SHA, $ROOT_F_SHA)

AT_DATA(testfile, [right version of fork
])
AT_CHECK(MONOTONE add testfile, [], [ignore], [ignore])
AT_CHECK(MONOTONE commit --message=blah-blah, [], [ignore], [ignore])
RIGHT_R_SHA=`BASE_REVISION`
RIGHT_F_SHA=`SHA1(testfile)`
AT_CHECK(test $RIGHT_R_SHA != $ROOT_R_SHA)
AT_CHECK(test $RIGHT_F_SHA != $ROOT_F_SHA)
AT_CHECK(test $RIGHT_R_SHA != $LEFT_R_SHA)
AT_CHECK(test $RIGHT_F_SHA != $LEFT_F_SHA)

# fork committed ok. now check to make sure
# all 3 nodes are reconstructable

PROBE_NODE(testfile, $ROOT_R_SHA, $ROOT_F_SHA)
PROBE_NODE(testfile, $LEFT_R_SHA, $LEFT_F_SHA)
PROBE_NODE(testfile, $RIGHT_R_SHA, $RIGHT_F_SHA)

AT_CLEANUP
