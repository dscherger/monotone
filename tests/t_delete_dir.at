AT_SETUP([(imp) deleting directories])
MONOTONE_SETUP

AT_CHECK(mkdir groundzero)
ADD_FILE(groundzero/preexisting, [1
])
ADD_FILE(groundzero/rename-out, [2
])
ADD_FILE(rename-in, [3
])
ADD_FILE(groundzero/double-kill, [4
])
ADD_FILE(bystander1, [5
])
COMMIT(testbranch)
BASE_R=`BASE_REVISION`

ADD_FILE(bystander2, [6
])
ADD_FILE(groundzero/new-file, [7
])
AT_CHECK(mv rename-in groundzero/rename-in)
AT_CHECK(MONOTONE rename rename-in groundzero/rename-in, [], [ignore], [ignore])
AT_CHECK(mv  groundzero/rename-out rename-out)
AT_CHECK(MONOTONE rename groundzero/rename-out rename-out, [], [ignore], [ignore])
AT_CHECK(MONOTONE drop -e groundzero/double-kill, [], [ignore], [ignore])
COMMIT(testbranch)
OTHER_OPS_R=`BASE_REVISION`

REVERT_TO($BASE_R)

# update doesn't remove files...
AT_CHECK(rm groundzero/rename-in)
AT_CHECK(rm groundzero/new-file)

AT_CHECK(MONOTONE drop -e groundzero, [1], [ignore], [ignore])
AT_CHECK(MONOTONE drop --recursive -e groundzero, [], [ignore], [ignore])
COMMIT(testbranch)
DIR_DELETE_R=`BASE_REVISION`


# orphaned node conflicts on rename-in and new-file
AT_CHECK(MONOTONE merge, [1], [ignore], [ignore])

AT_CHECK(MONOTONE update -r $OTHER_OPS_R, [], [ignore], [ignore])
AT_CHECK(MONOTONE drop groundzero/new-file, [], [ignore], [ignore])
AT_CHECK(MONOTONE drop groundzero/rename-in, [], [ignore], [ignore])
COMMIT(testbranch)
AT_CHECK(MONOTONE merge, [], [ignore], [ignore])


AT_CHECK(MONOTONE checkout --revision=$BASE_R clean, [], [ignore], [ignore])
AT_CHECK(cd clean && MONOTONE --branch=testbranch update, [], [ignore], [ignore])

AT_CHECK(test -f clean/rename-out, [1])
AT_CHECK(test -f clean/bystander1)
AT_CHECK(test -f clean/bystander2)
AT_CHECK(test -f clean/groundzero/rename-in, [1])
AT_CHECK(test -f clean/groundzero/preexisting, [1])
AT_CHECK(test -f clean/groundzero/double-kill, [1])
AT_CHECK(test -f clean/groundzero/new-file, [1])
# Just in case:
AT_CHECK(test -f clean/rename-in, [1])
AT_CHECK(test -f clean/groundzero/rename-out, [1])

AT_CLEANUP
