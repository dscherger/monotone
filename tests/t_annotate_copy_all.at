AT_SETUP([annotate where one parent is full copy])
MONOTONE_SETUP

#
#     A      Where B -> D is no change, but 
#    / \     C -> D shows a delta for a line modified in
#   B   C    B.
#    \ /
#     D
#

AT_DATA(A, [a
b
c
])

AT_DATA(B, [a
b
x
y
c
])

# C == A
# D == B

AT_CHECK(cp A foo)
ADD_FILE(initialfile, [foo 
file
])
AT_CHECK(MONOTONE add foo, [], [ignore], [ignore])
COMMIT(testbranch)
REVA=`BASE_REVISION`


AT_CHECK(cp B foo)
COMMIT(testbranch)
REVB=`BASE_REVISION`


REVERT_TO($REVA)
AT_CHECK(cp A initialfile)
COMMIT(testbranch)
REVC=`BASE_REVISION`


AT_CHECK(MONOTONE merge, [], [ignore], [ignore])
AT_CHECK(MONOTONE update, [], [ignore], [ignore])
REVD=`BASE_REVISION`

#
# annotate foo should now be
# REVA: a
# REVA: b
# REVB: x
# REVB: y
# REVA: c
#

AT_CHECK(MONOTONE annotate foo, [], [stdout], [ignore])
AT_CHECK(head -n 1 stdout | grep $REVA, [0], [ignore], [ignore])
AT_CHECK(head -n 2 stdout | tail -n 1 | grep $REVA, [0], [ignore], [ignore])
AT_CHECK(head -n 3 stdout | tail -n 1 | grep $REVB, [0], [ignore], [ignore])
AT_CHECK(head -n 4 stdout | tail -n 1 | grep $REVB, [0], [ignore], [ignore])
AT_CHECK(head -n 5 stdout | tail -n 1 | grep $REVA, [0], [ignore], [ignore])

AT_CLEANUP
