AT_SETUP([db kill_tag_locally])
MONOTONE_SETUP

ADD_FILE(testfile, [blah blah
])
COMMIT(testbranch)
R1=`BASE_REVISION`

SET_FILE(testfile, [foo foo
])
COMMIT(testbranch)
R2=`BASE_REVISION`

SET_FILE(testfile, [bar bar
])
COMMIT(testbranch)
R3=`BASE_REVISION`

SET_FILE(testfile, [baz baz
])
COMMIT(testbranch)
R4=`BASE_REVISION`

AT_CHECK(MONOTONE tag $R1 ambig_tag, [], [ignore], [ignore])
AT_CHECK(MONOTONE tag $R2 ambig_tag, [], [ignore], [ignore])
AT_CHECK(MONOTONE tag $R3 test_tag, [], [ignore], [ignore])
AT_CHECK(MONOTONE tag $R4 other_tag, [], [ignore], [ignore])

AT_CHECK(MONOTONE ls tags, [], [stdout], [ignore])
AT_CHECK(grep -q $R1 stdout, [])
AT_CHECK(grep -q ambig_tag stdout, [])
AT_CHECK(grep -q $R2 stdout, [])
AT_CHECK(grep -q ambig_tag stdout, [])
AT_CHECK(grep -q $R3 stdout, [])
AT_CHECK(grep -q test_tag stdout, [])
AT_CHECK(grep -q $R4 stdout, [])
AT_CHECK(grep -q other_tag stdout, [])

AT_CHECK(MONOTONE db kill_tag_locally test_tag, [], [ignore], [ignore])

AT_CHECK(MONOTONE ls tags, [], [stdout], [ignore])
AT_CHECK(grep -q $R1 stdout, [])
AT_CHECK(grep -q ambig_tag stdout, [])
AT_CHECK(grep -q $R2 stdout, [])
AT_CHECK(grep -q ambig_tag stdout, [])
AT_CHECK(grep -q $R3 stdout, [1])
AT_CHECK(grep -q test_tag stdout, [1])
AT_CHECK(grep -q $R4 stdout, [])
AT_CHECK(grep -q other_tag stdout, [])

AT_CHECK(MONOTONE db kill_tag_locally ambig_tag, [], [ignore], [ignore])

AT_CHECK(MONOTONE ls tags, [], [stdout], [ignore])
AT_CHECK(grep -q $R1 stdout, [1])
AT_CHECK(grep -q ambig_tag stdout, [1])
AT_CHECK(grep -q $R2 stdout, [1])
AT_CHECK(grep -q ambig_tag stdout, [1])
AT_CHECK(grep -q $R3 stdout, [1])
AT_CHECK(grep -q test_tag stdout, [1])
AT_CHECK(grep -q $R4 stdout, [])
AT_CHECK(grep -q other_tag stdout, [])

AT_CLEANUP