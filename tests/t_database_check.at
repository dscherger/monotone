#  -*- Autoconf -*-

AT_SETUP([database check])

MONOTONE_SETUP

AT_DATA(file1, [file 1
])
AT_DATA(file2, [file 2
])
AT_DATA(file3, [file 3
])

AT_DATA(fileX, [coopers
])

AT_DATA(fileY, [vitamin
])

AT_CHECK(MONOTONE add file1, [], [ignore], [ignore])
AT_CHECK(MONOTONE commit --branch=test --message='add file1', [], [ignore], [ignore])
REV1=`BASE_REVISION`
ROST1=`monotone --norc db execute "select id from rosters" | tail -n 1`

AT_CHECK(MONOTONE add file2, [], [ignore], [ignore])
AT_CHECK(MONOTONE commit --branch=test --message='add file2', [], [ignore], [ignore])
REV2=`BASE_REVISION`
FILE2=`SHA1(file2)`

AT_CHECK(MONOTONE add file3, [], [ignore], [ignore])
AT_CHECK(MONOTONE commit --branch=test --message='add file3', [], [ignore], [ignore])
FILE3=`SHA1(file3)`
REV3=`BASE_REVISION`

AT_CHECK(MONOTONE db check --ticker=dot, [], [ignore], [stderr])
AT_CHECK(grep 'database is good' stderr, [], [ignore], [ignore])

# remove file2 from the database invalidating roster2 and roster3
# both of which include this file

AT_CHECK(MONOTONE db execute "delete from files where id='$FILE2'", [], [ignore], [ignore])

AT_CHECK(MONOTONE db check --ticker=dot, [1], [ignore], [stderr])
AT_CHECK(grep 'database is good' stderr, [1], [ignore], [ignore])
AT_CHECK(grep 'problems detected' stderr, [0], [ignore], [ignore])
AT_CHECK(grep '1 missing file' stderr, [0], [ignore], [ignore])
AT_CHECK(grep '2 incomplete roster' stderr, [0], [ignore], [ignore])
AT_CHECK(grep '2 incomplete revision' stderr, [0], [ignore], [ignore])
AT_CHECK(grep 'total problems detected: 5' stderr, [0], [ignore], [ignore])
AT_CHECK(grep '5 serious' stderr, [0], [ignore], [ignore])


# add an unreferenced file
AT_CHECK(MONOTONE fload < fileX, [], [ignore], [ignore])
# create an unreferenced roster by deleting the revision. Note that this will increment
# the "missing revision" count by one for further checks
AT_CHECK(MONOTONE add fileY, [], [ignore], [ignore])
AT_CHECK(MONOTONE commit --branch=test --message='to be removed', [], [ignore], [ignore])
REV4=`BASE_REVISION`
AT_CHECK(MONOTONE db execute "delete from revisions where id='$REV4'", [0], [ignore], [ignore])
# revert to the old workspace state
AT_CHECK(echo $REV3 > _MTN/revision)
# remove another file too
AT_CHECK(MONOTONE db execute "delete from files where id='$FILE3'", [], [ignore], [ignore])

AT_CHECK(MONOTONE db check --ticker=dot, [1], [ignore], [stderr])
AT_CHECK(grep '1 unreferenced file' stderr, [0], [ignore], [ignore])
AT_CHECK(grep '1 unreferenced roster' stderr, [0], [ignore], [ignore])
AT_CHECK(grep '2 missing files' stderr, [0], [ignore], [ignore])

AT_CHECK(MONOTONE db execute "delete from revision_ancestry", [], [ignore], [ignore])
AT_CHECK(MONOTONE db check --ticker=dot, [1], [ignore], [stderr])
AT_CHECK(grep '2 mismatched parent' stderr, [0], [ignore], [ignore])
AT_CHECK(grep '2 mismatched child' stderr, [0], [ignore], [ignore])

# bogus revision ancestry entries

XDELTA_CC="877cfe29db0f60dec63439857fe78673b9d55346"
XDELTA_HH="68d15dc01398c7bb375b1a90fbb420bebef1bac7"

AT_CHECK(MONOTONE db execute "insert into revision_ancestry values('$XDELTA_CC', '$XDELTA_HH')", [], [ignore], [ignore])
AT_CHECK(MONOTONE db check --ticker=dot, [1], [ignore], [stderr])
AT_CHECK(grep '3 mismatched parent' stderr, [0], [ignore], [ignore])
AT_CHECK(grep '3 mismatched child' stderr, [0], [ignore], [ignore])
AT_CHECK(grep '3 missing revision' stderr, [0], [ignore], [ignore])

AT_CHECK(MONOTONE db execute "delete from roster_deltas where id='$ROST1'", [], [ignore], [ignore])
AT_CHECK(MONOTONE db check --ticker=dot, [1], [ignore], [stderr])
# ROSTER TODO: need check_sane_history equivalent in db check
#AT_CHECK(grep '3 revisions with bad history' stderr, [0], [ignore], [ignore])

AT_CHECK(MONOTONE db execute "delete from revisions where id='$REV1'", [], [ignore], [ignore])
AT_CHECK(MONOTONE db check --ticker=dot, [1], [ignore], [stderr])
AT_CHECK(grep '4 missing revision' stderr, [0], [ignore], [ignore])
# ROSTER TODO
#AT_CHECK(grep '2 revisions with bad history' stderr, [0], [ignore], [ignore])

echo "$REV2:comment:this is a test:tester@test.net:bogus sig" | sha1sum | read HASH

AT_CHECK(MONOTONE db execute "insert into revision_certs values ('$HASH', '$REV2', 'comment', 'this is a test', 'tester@test.net', 'bogus sig')", [], [ignore], [ignore])
AT_CHECK(MONOTONE db check --ticker=dot, [1], [ignore], [stderr])
AT_CHECK(grep '1 bad sig' stderr, [0], [ignore], [ignore])

AT_CHECK(MONOTONE db execute "delete from revision_certs where name = 'date'", [], [ignore], [stderr])
AT_CHECK(MONOTONE db check --ticker=dot, [1], [ignore], [stderr])
AT_CHECK(grep '2 missing certs' stderr, [0], [ignore], [ignore])
AT_CHECK(grep '4 mismatched certs' stderr, [0], [ignore], [ignore])

AT_CHECK(MONOTONE db execute "delete from public_keys", [], [ignore], [stderr])
AT_CHECK(MONOTONE db check --ticker=dot, [1], [ignore], [stderr])
AT_CHECK(grep '1 missing key' stderr, [0], [ignore], [ignore])
AT_CHECK(grep '13 unchecked signatures' stderr, [0], [ignore], [ignore])

AT_CLEANUP
