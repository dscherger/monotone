#  -*- Autoconf -*-

AT_SETUP([creating a good and bad test result])

MONOTONE_SETUP

AT_DATA(testfile, [first line of the file
second line of the file
third line of the file
])
AT_CHECK(MONOTONE add testfile, [], [ignore], [ignore])
AT_CHECK(MONOTONE --branch=testbranch commit --message=blah-blah, [], [ignore], [ignore])
ROOT_M_SHA=`SHA1(MT/manifest)`
ROOT_F_SHA=`SHA1(testfile)`

AT_DATA(testfile, [first line of the file
an insertion between first and second
second line of the file
third line of the file
])

AT_CHECK(MONOTONE commit --message=blah-blah, [], [ignore], [ignore])
LEFT_GOOD_M_SHA=`SHA1(MT/manifest)`
LEFT_GOOD_F_SHA=`SHA1(testfile)`
AT_CHECK(test $LEFT_GOOD_M_SHA != $ROOT_M_SHA)
AT_CHECK(test $LEFT_GOOD_F_SHA != $ROOT_F_SHA)

AT_DATA(testfile, [first line of the file
an insertion between first and second
second line of the file
third line of the file
an evil line which should never be seen
])

AT_CHECK(MONOTONE commit --message=blah-blah, [], [ignore], [ignore])
LEFT_BAD_M_SHA=`SHA1(MT/manifest)`
LEFT_BAD_F_SHA=`SHA1(testfile)`
AT_CHECK(test $LEFT_BAD_M_SHA != $LEFT_GOOD_M_SHA)
AT_CHECK(test $LEFT_BAD_F_SHA != $LEFT_GOOD_F_SHA)

PROBE_NODE(testfile, $ROOT_M_SHA, $ROOT_F_SHA)

AT_DATA(testfile, [first line of the file
second line of the file
an insertion between second and third
third line of the file
])


AT_CHECK(MONOTONE testresult $ROOT_M_SHA 1, [], [ignore], [ignore])
AT_CHECK(MONOTONE testresult $LEFT_GOOD_M_SHA 1, [], [ignore], [ignore])
AT_CHECK(MONOTONE testresult $LEFT_BAD_M_SHA 0, [], [ignore], [ignore])
AT_CHECK(MONOTONE update, [], [ignore], [ignore])

# files should now be merged

AT_DATA(probe, [first line of the file
an insertion between first and second
second line of the file
an insertion between second and third
third line of the file
])

AT_CHECK(cmp testfile probe, [], [ignore])

AT_CLEANUP
