annotate.cc:

  annotate_context::build_revisions_to_annotations():

    # Why does this go via the project? It only calls
    # db.get_revision_certs()...
    app.get_project().get_revision_certs(*i, certs);

    needs: erase_bogus_certs()


revision.cc:

  struct anc_graph still uses app_state, while most methods only need the
  database, these functions are exceptions:

    anc_graph::write_certs():
      needs: make_simple_cert()

    anc_graph::add_node_for_old_manifest
      needs: erase_bogus_cert()

    anc_graph::construct_revisions_from_ancestry()
      app.opts.attrs_to_drop


  build_roster_style_revs_from_manifest_style_revs()
    app.db....
    needs: anc_graph()
    needs: get_user_key()
    needs: require_password()


  build_changesets_from_manifest_ancestry()
    app.db...
    needs: anc_graph()
    needs: get_user_key()
    needs: require_password()
    needs: erase_bogus_certs()


cert.cc:

  bogus_cert_p::is_bogus_cert():
    needs: check_cert()

  erase_bogus_certs():
    app.db...
    app.lua.hook_get_manifest_cert_trust

  load_key_pair():
    app.keys...
    app.loa.hook

  calculate_cert():
    app.db...
    needs: load_key_pair()  (i.e. keys, lua.hook_persist_phrase_ok)
    needs: make_signature()

  check_cert()
    app.db...
    app.lua.hook_persist_phrase_ok
    needs: check_signature()

  get_user_key():
    app.keys...
    app.opts.signing_key
    app.lua.hook_get_branch_key
    app.opts.branchname

  guess_branch():
    app.opts.branch_given + app.opts.branchname
    app.get_project().get_revision_branches()

  make_simple_cert():
    needs: get_user_key()  (i.e. keys + some opts and hooks)
    needs: calculate_cert()

  cert_revision_author_default():
    needs (thought other calls): make_simple_cert()
    app.lua.hook_get_author
    app.opts.branchname
    





