# Functions and starter for the bash completion tests

proc success {} {
    send_user "\n<<success>>\n"
}

proc failure {str} {
    if {$str == ""} {
	send_user "\n<<failure>>\n"
    } else {
	send_user "\n<<failure: $str>>\n"
    }
}

# Escape weird characters - including spaces - from paths with a
# backslash. Feel free to add allowed characters. Note that forward
# and back slashes are allowed, as we escape the entire paths.
proc escape {str} {
    regsub -all {[^[:alnum:]_/\.\\]} $str {\\&}
}

set timeout 2
set env(initial_dir) $initial_dir
set env(srcdir) $srcdir
# some user's ~/.bash_profile start xserver etc; don't do that
spawn "bash" "--init-file" "/dev/null" "--rcfile" "bashrc"
# If there is no completion package, it's no point trying this.
# Make sure we do get a prompt.
expect {
    -timeout 200
    timeout { failure "no prompt"; exit }
    "No bash completion package present." {
	failure "No bash completion package present."; exit
    }
    -re "@ $"
}
send ". [escape $initial_dir]/extra/shell/monotone.bash_completion\n"
# Wait for the last line to be echoed
expect "shell/monotone.bash_completion"
