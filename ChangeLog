Revision history for mtn-browse.

0.70  Mon May 31 14:50:00 2010 Anthony Cooper <support@coosoft.plus.com>
	- Updated the help documentation in light of the changes made to
	  mtn-browse (the manage server bookmarks dialog window, the file
	  encoding menu options and the compare arbitrary revisions window).
	- Updated the code to reference the new help sections.
	- Updated mtn-browse's version number and the year on the copyright
	  notice.
	- Removed the scrolled windows and layouts from the revision id value
	  labels in the compare arbitrary revisions window as I couldn't get
	  the text lines to line up horizontally between the labels and
	  corresponding values due to the advanced find buttons being in the
	  same row.
	- Made sure that all the buttons on the compare arbitrary revisions
	  window don't accept focus (like all the other flush buttons).
	- Made sure that the first value label gets the focus so as to take it
	  away from the first button.
	- Improved, updated and corrected a few tooltips and removed some
	  others that are dynamically generated by the application.
	- Worked around a bug in Gnome::VFS which causes a core dump on Debian
	  Lenny.
	- Updated the figures with snapshots of the new version of mtn-browse.
	- Added eye.png to the ignore list.
	- Implemented the select arbitrary revisions feature.
	- The advanced find dialog window now puts the keyboard focus onto the
	  branch comboboxentry field by default (just like the main browser
	  window).
	- All menu items that rely on an open database are now disabled when
	  there isn't one.
	- The server bookmarks menu is only enabled if mtn supports that
	  feature, this information is also cached in the user's preferences
	  just in case they don't start mtn-browse with a default database.
	- The annotate button is disabled when accessing a remote server.
	- Entered in the help reference for the server bookmarks manager
	  window.
	- The run_command() routine now supports command termination and errors
	  from sysread() are dealt with.
	- The revision comparison window now allows a user to stop the
	  comparison not only during the formatting stage but also during the
	  actual mtn diff operation as well.
	- Now guard against re-entrancy in custom dialog windows when calling
	  the hide() method.
	- Needless updates to the MIME types treeview are now avoided.
	- Now track changes in paths inside the MIME treeview as a result of
	  the user changing the display order.
	- Now disable Monotone-Viz button with remote connections.
	- Put manage menu item the end of the servers menu.
	- Now rely on Monotone::AutomateStdio to report all server connection
	  problems.
	- Sorted out the focus issue with all TreeViews when searching for text
	  (the selection would change but nothing else acted on that selection
	  change).
	- Added the `connect to service' logic and GUIs.
	- Now deal with errors resulting from trying to open a Monotone
	  database in a much more intelligent way.
	- Improved some of the messages in error dialogs.
	- Added a View menu that allows the user to select the character
	  encoding in use inside text files stored inside a Monotone database
	  rather than just assume it is UTF-8.
	- Now a bit more explicit about the error handing from the
	  encode/decode routines.
	- The character decoding is now done specifically by the annotation and
	  history modules rather than generically by run_command (this is to
	  cope with a mixture of character encodings in the output from
	  annotate and content_diff - i.e. the UTF-8 explanatory text added by
	  Monotone and the character encoding used in the original text file).
	- Minor code tidy ups and comment corrections.
	- Updated the translation files.

0.63  Sun Nov 08 13:27:00 2009 Anthony Cooper <support@coosoft.plus.com>
	- Updated the help documentation in light of the changes made to the
	  GUI, i.e.:
	  - Changes in some of the icons.
	  - New preferences to do with binary thresholds and completion
	    tooltips.
	- get_file_details() now makes sure that it goes with the latest
	  revision to hand, just like other parts of mtn-browse.
	- The MAS content_diff() method is used instead of fork-execing off
	  another instance of Monotone if it supports the --with-headers
	  option. Who ever was responsible for actioning my ticket - a big
	  thank you :-).
	- Now guard against files comparing the same between different
	  revisions.
	- Added the binary threshold preference option and its implementation.
	- Re-ordered some preference settings into more logical groups.
	- Implemented preference options for controlling the display of
	  completion tooltips and listing folders before files instead of
	  alphabetically in directory listings.
	- Made some of the button icons more meaningful and improved the look
	  of some of the rest.
	- Autocompletion now does not allow "" as a valid complete entry
	  against an empty list of possible completions.
	- scalar(%hash) is used instead of defined(%hash) to see if a hash is
	  empty (the defined approach is depreciated apparently).
	- The autocompletion logic has been cleaned up some more so as not to
	  make unnecesary updates to the screen and to correctly detect
	  completions when deleting text from the end of a term and the static
	  lists setting is turned on.
	- Entries within completion tables now always point to other tables.
	- Truncated completions are still marked as complete if the truncated
	  value is so.
	- The status bar is cleared out when opening another database.
	- Implemented the tooltip feedback feature for auto-completing
	  comboboxentry widgets (suggestion from Thomas Keller).
	- The callbacks for these auto-completing comboboxentry widgets are now
	  registered via a setup routine rather than via Glade as some
	  callbacks need to be registered with the comboboxentry's entry child
	  widget.
	- Moved some of the setup code into the multiple_revisions_selection
	  routine so as to be consistent with other window setup modules.
	- Reordered the comboboxentry initialisation code to reflect the order
	  of the widgets on the main browser window.
	- Implemented the `Multiple Revisions' dialog window and use it when
	  either a tag has been selected which is not unique on that branch or
	  when auto select head revision is switched on and the user switches
	  to a multi-headed branch.
	- Now pack at the start of a collection when using the pack_start()
	  method (more standard and consistent).
	- Added extra protection in some of the get_... window creation
	  routines to stop recursion.
	- Updated the help documentation and screenshots accordingly.
	- Made the exception handling cleaner and more consistent.
	- Now check that a program is known before attempting to run it. If it
	  isn't known then tell the user via a dialog window.
	- The run_command routine now returns its data as UTF-8.
	- In the places where unpack() is used to break apart strings, the
	  returned parts are re UTF-8 decoded as unpack() undoes this encoding.
	- Now much more explicit in handling the reaping of subprocesses and
	  much more robust in the face of a subprocess that won't die.
	- Now cope with open3() throwing exceptions whilst inside the child
	  process.
	- Now use the `use locale' pragma correctly across all source files.
	- Implemented a Locale::Messages::bind_textdomain_filter callback
	  routine that guarantees that all strings returned from the Locale
	  library are in UTF-8.
	- Moved the APPLICATION_NAME/_VERSION constants into mtn-browse so that
	  the library initialisation code can make use of them.
	- The HELP_VIEWER installation option is now called HTML_VIEWER.
	- Added the FILE_COMPARISON installation option.
	- Now use the HTML viewer for displaying URLs like the home page.
	- When using the HTML viewer and HTML help files do not rely on Gnome
	  to help find the help directory.
	- Now make use of APPLICATION_NAME more often.
	- Likewise UI_DIR.
	- Updated the `prepare tar file' section with the additional removal of
	  the devl-install file.
	- Moved the location of the Glade files to be more inline with standard
	  Linux installation locations.
	- The installers now cope with HTML stype help files. Also added the
	  HELP_VIEWER/--help-viewer installation option and updated the
	  dependencies.
	- Updated the README with details about the new installation option
	  mentioned above, removed the manual installation section (there is no
	  real need for it), updated the dependencies in light of Nuno Lucus'
	  feedback and reordered a few things to make it clearer.
	- Sorted out UTF-8/binary data handling so that it is sane and correct.
	- Added a file describing what to do in order to create a tar.gz
	  distribution file. Hopefully this process will be less hit and miss
	  in the future.
	- Implemented a mode where help is displayed using the desktop's web
	  browser. Just in case yelp is not installed on the system (as is the
	  case with Apple Mac OSX).
	- Set the page size attribute on all spin buttons to zero. This stops
	  warning messages on Ubuntu. I can see its point, where is the page
	  size attribute documented?
	- Now much more pedantic about using the callback recursion guard
	  variable in all window creation code. Again stops error messages on
	  Ubuntu.
	- Corrected typos in the locale README file.
	- Updated the POT file.
	- Locale update from Thomas Keller.

0.62  Sun May 03 18:00:00 2009 Anthony Cooper <support@coosoft.plus.com>
	- Added the new relevant selectors introduced in Monotone 0.43.
	- Added the help files.
	- Added the help on window feature.
	- Set up all of the windows for help and context sensitive help.
	- Implemented the context sensitive help feature.
	- Added the home page help menu option.
	- Updated the help manual with details about the new help options and
	  modes, the new selectors introduced in Monotone version 0.43 and the
	  new preference options.
	- Implemented a caching class derived from Monotone::AutomateStdio for
	  caching branch list information. Switched the rest of the application
	  over to this new class.
	- Now weed out unsupported selectors from the GUI depending upon the
	  version of Monotone being used.
	- Added a user preference option for determining how a list search is
	  done (either plain text or as a re).
	- Added user preference options for controlling the look of the
	  toolbar.
	- Gtk2::FileChooserDialog dialog windows now have their current
	  directory location saved between invocations.
	- Added calls to the present() method after each call to
	  show()/show_all() for each window (fixes the focus issue with windows
	  not shown by default on desktops that use click to focus).
	- Corrected a bug with the Advanced Find dialog window's handling of
	  the Find Text dialog window (it didn't reset the search context when
	  loaded with new data nor disabled it when there was no data to
	  search).
	- Enabled the use of the Find Text dialog window within the Advanced
	  Find dialog window.
	- Both the Advanced Find and Preferences dialog windows are now no
	  longer modal as this is taken care of by the WindowManager class.
	- Now no longer rely on modal dialog windows, deal with it ourselves
	  (also supporting context sensitive help). This will allow the
	  Advanced Find dialog window to use the Find Text dialog window.
	- Started using the update method on spinbuttons in order to make sure
	  that their internal state is consistent.
	- Fixed the bug where the Advanced Find dialog window did not respond
	  to Shift-<F1>. Basically it seems that the window must not be
	  realised before the accelerator keys have been set up
	  (i.e. ...->show_all() and WindowManager->update_gui() can only be
	  called after WindowManager->instance()->manage()).
	- Renamed the `Separator' selector to `Logical And', it makes more
	  sense.
	- Cleaned up and restructured WindowManager.pm a bit to make it more
	  modular, increase code reuse and make it easier to understand.
	- Corrected a few stack handling issues in the WindowManager class.
	- mtn-browse now correctly gets the name of the database from a
	  workspace regardless of the user's `auto_select' setting.
	- Now display a file's author instead of file id in the main browser
	  window.
	- Fixed a bug whereby the external file comparison button remained
	  enabled when a lone binary file was selected for comparison.
	- When a single file is selected for comparison, the results window is
	  now scrolled to that file.
	- Added Thomas Keller's German locale file for mtn-browse.
	- Switched over to using the supports method instead of the can method.
	- References to MIME are now correctly in upper case.
	- Corrected spelling of cronologically to chronologically.
	- Renamed a few things in the code, Glade file and the help file so as
	  to be more consistent.
	- Removed a redundant routine prototype in Completion.pm (actually
	  caused a warning message).
	- Reinstated the Gnome save window settings setting.
	- Updated the README file in light of additional Makefile.PL command
	  line options and the additional help files that are now installed.
	- The Linux installer now copes with help files.
	- linux-installer now does not require the LIB_DIR setting to have a
	  leading /.
	- Corrected the built in help that comes with linux-installer.
	- The dependency checker now returns the error message rather than
	  displaying it.
	- Corrected some symbolic linking in devl-install relating to help
	  files.
	- Makefile.PL now allows one to specify all of linux-installer's useful
	  options.
	- Did some small code tidy ups.

0.61  Sun Feb 08 18:00:00 2009 Anthony Cooper <support@coosoft.plus.com>
	- Added a Makefile.PL style install capability.
	- Split out the dependency checker into a separate module.
	- Updated INSTALL and README with the up to date details of
	  installation.
	- Moved the support modules for linux-installer into their own
	  subdirectory.
	- Beefed up linux-install. It now:
	  - Can take all its information from the command line.
	  - Supports the concept of DESTDIR.
	  - Checks that Perl dependencies have been met.
	  - Has built in help.
	- Switched all Perl scripts over to demanding Perl 5.8.5.
	- Added a user preference option for controlling whether line numbers
	  are displayed by default when showing a file's contents.
	- Added a user preference option for controlling whether branch and
	  revision comboboxentries update their lists when the user is typing
	  in values (a performance tuning option).
	- A scroll margin is now used when finding text. This makes it easier
	  to see the context of a found string when it is at the top or bottom
	  of the window.
	- Directory separators are no longer assumed to be '/'.
	- The get_revision_ids routine now correctly uses the current branch to
	  refine the query (can now cope with multiple tags on different
	  branches).
	- Renamed the find_button widget to find_text_button to make it more
	  specific.
	- Annotate window now offers a lot more options via its menu for
	  accessing file and revision change logs and comparing between the
	  current file or revision its parent version.
	- Put some string constants under locale control, they were missed off
	  before by accident.
	- Made sure that all calls to dialogs' run method are granted mouse
	  input by the WindowManager object.
	- The mtn warning handler can be suppressed by the use of a global
	  variable (which can be set using local).
	- Now guard against no external comparison helper application being
	  setup.
	- Refactored some code in History.pm to better help support the new
	  annotate window options.
	- Annotate no longer fails on an empty file.
	- Annotate and comparisons are no longer affected by where the
	  application is run inside a workspace.
	- mtn-browse now always explicitly opens a database rather than relying
	  on the mtn subprocess sorting itself out inside a workspace. This
	  means that the mtn subprocess is always run in the root directory
	  which is much safer WRT unexpected interactions with a workspace.
	- Database locked dialog windows are no longer parented as these
	  dialogs are in fact related to Monotone::AutomateStdio object
	  instances and not browser window instances (which share
	  Monotone::AutomateStdio object instances).
	- Now a little bit better at reporting helper application launch errors
	  to the user.
	- Vertical panes now maintain the size of the left hand window.
	- Implemented the option of selecting a search column in a treeview
	  widget.
	- Searching in a treeview now used REs.

0.60  Fri Jan 23 19:09:00 2009 Anthony Cooper <support@coosoft.plus.com>
	- Initial release of the application to Source Forge.
