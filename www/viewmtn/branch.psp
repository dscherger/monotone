<%

import datetime
import config
import urllib
import common
import time
from common import parse_timecert, ago_string

# 
# branch.psp
# display a log of changes on a given branch, with an 
# optional offset
#

psp.set_error_page("error.psp")

def prettify(s):
    return '&nbsp;'.join(map(lambda x: hq(x[0].upper() + x[1:]), s.replace("_", " ").split(" ")))

if not form.has_key('branch'):
    raise Exception("No branch specified.")

page = 1
if form.has_key('page'):
    try: page = int(form['page'])
    except: pass

if form.has_key('rss'):
    output = 'rss'
else:
    output = 'html'

if page < 1: page = 1

display = 10
offset = page * display

branch = form['branch']

page_title = "Changes to branch %s" % (hq(branch))
if output == 'html':
    info = {
        'title' : page_title, 
        'branch_rss' : [branch]
        }
    req.write(template.header(info))
elif output == 'rss':
    req.write('''\
<rss version="2.0">
  <channel>
    <language>en-us</language>

    <title>%s</title>
    <link>%s</link>
    <description>%s</description>''' % (page_title, config.base_url(req.uri), page_title))

heads = mt.heads(branch)

recent = mt.toposort(mt.ancestors(heads) + heads)

if display > len(recent):
    display = len(recent)
if offset > len(recent):
    offset = len(recent)
    no_next = True
else:
    no_next = False

start = -1*offset
stop = start + display
if stop == 0: stop = None
recent = recent[start:stop]
recent.reverse()

%>

<%
if output == 'html':
    req.write('''\
<p>
This page lists changes %s through %s to %s.
It may also be useful to view the %s of this branch.
</p>''' % (-1*(stop or 0), (-1 * start), link('branch', branch), link('headofbranch', branch, 'current head revision')))
    req.write('<table class="pretty" style="position: relative; width: 80%; left: 10%;">')
%>

<%
for idx, id in enumerate(recent):
    certs = mt.certs(id)

    if output == 'rss':
        req.write('<item>\n')
        req.write('<link>%s</link>\n' % (urllib.basejoin(config.base_url(req.uri), 'revision.psp?id=%s' % (urllib.quote(id)))))

    certdate, quicklog, certinfo = None, "", ""
    for cert in certs:
        name, value = None, None
        for k, v in cert:
            if k == "name": name = v
            elif k == "value": value = v
	if name == None or value == None: continue
        if name == "date":
            certdate = parse_timecert(value)
            if output == 'rss': req.write("\t<pubDate>%s</pubDate>\n" % hq(certdate.strftime("%a, %d %b %Y %H:%M:%S +0000")))
        elif name == "branch":
	    # hackish, but oh well
	    if value == branch:
		value = None
	    else:
		name = "other_branches"
		value = link("branch", value)
        else:
            if name == "changelog":
                quicklog = common.quicklog(value)
                if output == 'rss': req.write("\t<title>%s</title>\n<description>%s</description>\n" % (quicklog, hq(value)))
            elif name == "author":
                if output == 'rss': req.write("\t<author>%s</author>\n" % (hq(value)))
            value = '<br />'.join(map(hq, value.split('\n')))
        if name != None and value != None:
	    certinfo += '<tr><th align="right" valign="top">%s:</th><td valign="top">%s</td></tr>\n' % (prettify(name), value)

    now = datetime.datetime.utcnow()
    ago = ago_string(certdate, now)

    if output == 'html':
        style = "border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: black;"
        if idx != 0: 
            style += "border-top-style: solid; border-top-width: 1px; border-top-color: black;"
	revision = mt.revision(id)
	diff_links = ' | '.join([link("diff", [t[1], id], "diff") for t in revision.get('old_revision', [])])
	style = ""
        req.write('<tr><td colspan="2" class="branchInfoHeader" style="%s"><strong>%s ago: %s</strong><br /><span style="color:black;">%s | %s | %s</span></td></tr>\n' % (style, ago, quicklog, link("revision", id, "revision info"), link("manifest", id, "browse files"), diff_links))
        req.write(certinfo)
    elif output == 'rss':
        req.write('</item>\n')

if output == 'html':
    req.write('</table>')

    c = []
    if page != 1:
        c.append('<a href="branch.psp?branch=%s&amp;page=%d">Newer changes</a>' % (urllib.quote(branch), page-1))
    if not no_next:
        c.append('<a href="branch.psp?branch=%s&amp;page=%d">Older changes</a>' % (urllib.quote(branch), page+1))
    req.write('<p style="text-align:center;">' + ' | '.join(c) + '</p>')

%>

<%

if output == 'html':
    req.write(template.footer(info))
elif output == 'rss':
    req.write('''\
  </channel>
</rss>
''')
%>

