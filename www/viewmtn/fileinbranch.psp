<%

import monotone
import urllib

psp.set_error_page("error.psp")

if not form.has_key('branch'):
    raise Exception("No branch specified.")
if not form.has_key('path'):
    raise Exception("No path specified.")
branch = form['branch']
path = form['path']

# fileinbranch.psp
#
# determine the latest version of the file 
# in a branch (and present a choice iff there 
# are multiple heads and the files difer in them)

heads = mt.heads(branch)
if len(heads) == 0:
    raise Exception("No head ID can be determined for this branch.")

# build a hash with a list of all files in each head which 
# match PATH and their file ID.
file_version = {}
for id in heads:
    revision = mt.revision(id)
    manifest_id = revision['new_manifest'][0][1]
    file_revisions = filter(lambda x: x[1] == path, mt.manifest(manifest_id))
    if len(file_revisions) > 1:
        raise Exception("More than one file matches path?")
    elif len(file_revisions) == 1:
        file_version[id] = file_revisions[0][0]
if len(file_version.values()) == 0:
    raise Exception("No file such file found in this branch.")

unique = True
last = None
values = file_version.values()
for file_revision in values:
    if last != None and file_revision != last:
        unique = False
        break
    last = file_revision
if unique:
    psp.redirect("getfile.py?id=%s&path=%s" % (urllib.quote(values[0]), urllib.quote(path)))
else:
    info = {'title' : "Latest version of %s in branch %s" % (hq(path), hq(branch))}
    req.write(template.header(info))
%>
<p>
The branch you have selected has multiple head revisions, and the file you are attempting 
to access differs between them. The head revisions are listed below, along with 
links to download "<%=hq(path)%>" from that revision.
</p>

<table class="pretty">
<tr><th>Head revision</th><th>View file</th></tr>
<%
    for id in file_version.keys():
        req.write('<tr><td align="center">%s</td><td align="center">%s</tr>' % (link("revision", id), link("download", [file_version[id], path], "view file")))

%>
</table>

<%
req.write(template.footer(info))
%>
