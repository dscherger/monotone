
BUGS:

  * \n in title of the ancestry graph

TODO:

  * support for translation, and see if we can get some people to help with that
    モノトネ

  * some sort of contest for a logo (with some sort of cool prize, perhaps 
    con someone into putting one up on offer or pay up myself.)

  * a revision selector interface - make sure it prints out the revision 
    selector to the person, so that they can use it on the command line later
    ** make this AJAX; show the results *as the person types* **
    ** this feature would blow people out of the water **

  * optionally pop-up a window (or some sort of AJAX box lurking someplace) 
    which updates with the commands that have been run - useful for debugging, 
    also useful for beginners to see how to do stuff.

  * Use monotone automate graph to do the ancestry graphing, and show some 
    future information. Perhaps cache based on the mtime of the db viewmtn 
    is looking at? Might be good enough.

    Show dotted lines for propogates (with that information on the arc)
    
    Show lines leading off from the boxes at either end of the graph (if 
    applicable) to give context that the image being shown is part of a 
    large overall graph.

  * Show information when mousing over long hex strings.

  * Magically make http:// ftp:// etc links inside files clickable

  * In the file diff view for multiple files, show the same change set 
    information that is available in the revision view - this will help 
    explain what's happened. For bonus points, index into the diff so you 
    can click on a file that changed and jump to that section in the diff.

  * Improve the file listing; use data from the new rosters branch 
    to get a better idea of when a given file was last touched.

  * When viewing a file, give a list of revisions in which that file 
    was recently changed. Include in the list a link to diff with each 
    revision.

  * generally clean up table formatting code; things like
      list_of_branches()
      list_of_tags()
      revision_certs()
      revision_details()
    use a generic method to output the tables

  * from [mrb]
    support for multiple databases (perhaps some sort of dropdown to say which 
    database you want to look in) - perhaps also make the branches page show the 
    branches in each of the DBs, for ease.

AJAX ideas:

  * When hovering over nodes in the ancestry graph, display the ChangeLog.

  * When hovering over branch links, show heads and other information

  * When hovering over revisions, show author / date

  * When hovering over diff links 

  * turn line numbering in file / diff view (etc) on and off

  * file viewer; treat merges as a special case and show the side which 
    actually has the resultant file (no change on that edge)

  * file viewer / diff viewer / anywhere showing info related to a rev
    magic <show revision information> box that downloads and inserts 
    revision stuff.

  * we need some concept of selecting two points revisions for diffs or other 
    comparison. This is the main strength ViewCVS seems to have over us.

LONG TERM:

  * provide some option for people without apache2 / mod_python to run the 
    thing; even if it's running the program from a standalone python webserver.
    Would settle for a solution that required a cgi capable webserver rather than 
    specifically mod_python (and thus apache2) while still supporting mod_python 
    acceleration if present.
