
import mimetypes
import urllib
import common
import config
import time
import os
from viewmtn import release

hq = common.html_escape()

def get_icon(filename, mime_type=None, is_directory=False):
    if config.gnome_mimetype_icon_path == None:
        return None
    if is_directory:
        filename = 'gnome-fs-directory.png'
    else:
        if mime_type == None:
            mime_type = mimetypes.guess_type(filename)[0]
        if not mime_type:
            mime_type = "text"
        if mime_type.endswith('hdr'):
            mime_type = mime_type[:-3] + 'src'
        # some specific fixups
        filename = 'gnome-mime-' + mime_type.replace('/', '-') + '.png'
    if os.access(os.path.join(config.gnome_mimetype_icon_path, filename), os.R_OK):
        return '/'.join([config.gnome_mimetype_uri, filename])
    else: 
        return None

class TableWriter:
    def __init__(self, req):
        self.req = req
        self.odd = False
    def start(self):
        self.req.write('<table class="pretty">')
    def write(self, row, is_header=False):
        if self.odd: c = 'odd'
        else: c = 'even'
        if is_header: self.odd = False
        else: self.odd = not self.odd
        self.req.write('<tr class="%s">' % (c) + row + '</tr>\n')
    def stop(self):
        self.req.write('</table>')

def strip_html_from(t):
    in_tag, rv = False, ''
    for c in t:
	if in_tag and c == '>':
	    in_tag = False
	elif not in_tag and c == '<':
	    in_tag = True
	elif not in_tag:
	    rv += c
    return rv

class Template:
    def header(self, info):
        if not info.has_key("title"): info['title'] = "untitled"
	if not info.has_key("extra_header"): info['extra_header'] = ''
	if not info.has_key("short_title"):
	    info["short_title"] = strip_html_from(info["title"])

        if info.has_key('branch_rss'):
            for branch in info['branch_rss']:
                info['extra_header'] += '<link rel="alternate" type="application/rss+xml" href="branch.psp?branch=%s&amp;rss=1" title="RSS feed for %s" />\n' % (urllib.quote(branch), hq(branch))
        return """\
    <?xml version="1.0" encoding="UTF-8"?>
    <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
    <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" >
    <head>
    <title>ViewMTN: %(short_title)s</title>
    <link rel="stylesheet" href="viewmtn.css" type="text/css" media="screen" />
    <script type="text/javascript" src="../../MochiKit/MochiKit.js"></script>
    <script type="text/javascript" src="viewmtn.js"></script>
    <!-- extra headers -->
    %(extra_header)s
    </head>
    <body>
    <div id="popupBox" class="invisible"></div>
    <div id="menuBar">
    <strong>Project</strong>: <a href="../">Project info page</a><br/>
    <strong>ViewMTN</strong>: <a href="index.psp">Branches</a> | <a href="tags.psp">Tags</a> | <a href="help.psp">Help</a> | <a href="about.psp">About</a>
    </div>

    <h1 id="pageTitle">%(title)s</h1>
    """ % (info)
    def footer(self, info):
        rv = """<div id="footer">"""
        if info.has_key('branch_rss'):
            for branch in info['branch_rss']:
                rv += '<a href="branch.psp?branch=%s&amp;rss=1" title="RSS feed for %s"><img alt="RSS Feed" border="0" src="rss_feed.gif" /></a>' % (urllib.quote(branch), hq(branch))
        rv += '''<br />
    <small><small>Output generated by <a href="http://grahame.angrygoats.net/viewmtn.shtml">ViewMTN</a> %s on %s.</small></small>
    </div>
    <script type="text/javascript">
    installCallbacks();
    </script>
    </body></html>''' % (release, time.strftime("%a, %d %b %Y %H:%M:%S %Z", time.localtime()))
        return rv
