#! /bin/sh
# postinst script for #PACKAGE#
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#

case "$1" in
    configure)

    MTN_DB=/var/lib/monotone/default.db
    MTN_HOME=/var/lib/monotone

    # create monotone user and fix permissions of files
    if [ -z "`id -u monotone 2> /dev/null`" ]; then
        /usr/sbin/adduser --system --group --home $MTN_HOME --no-create-home --disabled-password --quiet monotone --gecos "Monotone"
	chmod 0740 $MTN_HOME
	chmod 0740 /etc/monotone
	chown monotone.monotone /etc/monotone
    fi

    if [ -e $MTN_DB ]; then
        echo "Monotone database exists."
    else
	echo "Creating Monotone database..."
        /usr/bin/monotone --db $MTN_DB db init
	chmod 0600 $MTN_DB
	echo "Creating Monotone server keypair..."
        echo -ne "$MTN_KEY_PASSWD\n$MTN_KEY_PASSWD\n" | /usr/bin/monotone \
	    --db $MTN_DB genkey $MTN_KEY &> /dev/null
	/usr/bin/monotone --db $MTN_DB pubkey $MTN_KEY > $MTN_HOME/$MTN_KEY.pubkey
	echo "Monotone database created successfully."
    fi

    ;;

    abort-upgrade|abort-remove|abort-deconfigure)

    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0


