
GOPT(debug, "debug", nil, gettext_noop("print debug log to stderr while running"));
GOPT(dump, "dump", string, gettext_noop("file to dump debugging log to, on failure"));
GOPT(log, "log", string, gettext_noop("file to write the log to"));
GOPT(quiet, "quiet", nil, gettext_noop("suppress verbose, informational and progress messages"));
GOPT(reallyquiet, "reallyquiet", nil, gettext_noop("suppress warning, verbose, informational and progress messages"));
GOPT(help, "help,h", nil, gettext_noop("display help message"));
GOPT(version, "version", nil, gettext_noop("print version number, then exit"));
GOPT(full_version, "full-version", nil, gettext_noop("print detailed version number, then exit"));
GOPT(argfile, "xargs,@", vector<string>, gettext_noop("insert command line arguments taken from the given file"));
GOPT(ticker, "ticker", string, gettext_noop("set ticker style (count|dot|none)"));
GOPT(nostd, "nostd", nil, gettext_noop("do not load standard lua hooks"));
GOPT(norc, "norc", nil, gettext_noop("do not load ~/.monotone/monotonerc or _MTN/monotonerc lua files"));
GOPT(rcfile, "rcfile", vector<string>, gettext_noop("load extra rc file"));
GOPT(key_name, "key,k", string, gettext_noop("set key for signatures"));
GOPT(db_name, "db,d", string, gettext_noop("set name of database"));
GOPT(root, "root", string, gettext_noop("limit search for workspace to specified root"));
GOPT(verbose, "verbose", nil, gettext_noop("verbose completion output"));
GOPT(key_dir, "keydir", string, gettext_noop("set location of key store"));
GOPT(conf_dir, "confdir", string, gettext_noop("set location of configuration directory"));

COPT(author, "author", string, gettext_noop("override author for commit"));
COPT(bind, "bind", string, gettext_noop("address:port to listen on (default :4691)"));
COPT(branch_name, "branch,b", string, gettext_noop("select branch cert for operation"));
COPT(brief, "brief", nil, gettext_noop("print a brief version of the normal output"));
COPT(context_diff, "context", nil, gettext_noop("use context diff format"));
COPT(date, "date", string, gettext_noop("override date/time for commit"));
COPT(depth, "depth", long, gettext_noop("limit the number of levels of directories to descend"));
COPT(diffs, "diffs", nil, gettext_noop("print diffs along with logs"));
COPT(drop_attr, "drop-attr", vector<string>, gettext_noop("when rosterifying, drop attrs entries with the given key"));
COPT(exclude, "exclude", vector<string>, gettext_noop("leave out anything described by its argument"));
COPT(execute, "execute,e", nil, gettext_noop("perform the associated file operation"));
COPT(external_diff, "external", nil, gettext_noop("use external diff hook for generating diffs"));
COPT(external_diff_args, "diff-args", string, gettext_noop("argument to pass external diff hook"));
COPT(key_to_push, "key-to-push", vector<string>, gettext_noop("push the specified key even if it hasn't signed anything"));
COPT(last, "last", long, gettext_noop("limit log output to the last number of entries"));
COPT(message, "message,m", string, gettext_noop("set commit changelog message"));
COPT(missing, "missing", nil, gettext_noop("perform the operations for files missing from workspace"));
COPT(msgfile, "message-file", string, gettext_noop("set filename containing commit changelog message"));
COPT(next, "next", long, gettext_noop("limit log output to the next number of entries"));
COPT(no_files, "no-files", nil, gettext_noop("exclude files when printing logs"));
COPT(no_merges, "no-merges", nil, gettext_noop("exclude merges when printing logs"));
COPT(no_show_encloser, "no-show-encloser", nil, gettext_noop("do not show the function containing each block of changes"));
COPT(no_transport_auth, "no-transport-auth", nil, gettext_noop("disable transport authentication"));
COPT(pidfile, "pid-file", string, gettext_noop("record process id of server"));
COPT(recursive, "recursive,R", nil, gettext_noop("also operate on the contents of any listed directories"));
COPT(revision, "revision,r", vector<string>, gettext_noop("select revision id for operation"));
COPT(set_default, "set-default", nil, gettext_noop("use the current arguments as the future default"));
COPT(stdio, "stdio", nil, gettext_noop("serve netsync on stdio"));
COPT(unified_diff, "unified", nil, gettext_noop("use unified diff format"));
COPT(unknown, "unknown", nil, gettext_noop("perform the operations for unknown files from workspace"));
