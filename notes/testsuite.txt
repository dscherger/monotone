
Functions and variables specific for the monotone testsuite (testsuite.lua)
---------------------------------------------------------------------------

ostype

	For convenience, this is the first word of what get_ostype() returns.

getpathof(exe, ext) [internal]

	Used to find the mtn executable. This looks in cwd before searching the 
	path.

monotone_path

	Set the the path of the mtn executable. If the testsuite is run from a 
	dir containing an mtn executable, that executable is used instead of any
	that might be on the path.

mtn [env var]

	Set to monotone_path. This is used by one of the test hooks, for file:/ 
	sync.

safe_mtn() [internal]
raw_mtn()

	A monotone that won't escape the test dir.

mtn()

	A monotone with most of the boilerplate options. You probably want to 
	use this one.

minhooks_mtn()

	Like mtn(), but it uses a different hooks file.

commit([branch [, message [, mt]]])

	Commit to the given branch, or "testbranch". Uses mtn(), or mt() if that
	is given.

sha1(file)

	Return the hash of the given file.

probe_node(filename, rsha, fsha)

	Check out a given revision, and check that a given file has the correct
	hash.

mtn_setup()

	General setup, always call this first.

base_revision()
base_manifest()

	Return hashes associated with the workspace base revision.

certvalue(rev, name)

	Return the value of the given cert. If there are multiple certs matched,
	only return the first one.

qgrep(what, where)

	More convenient than using grep("-q", ...). Returns true/false.

addfile(filename, contents [, mt])

	Write the given file, then add it (Using the specified monotone, 
	if given).

revert_to(rev, branch [, mt])

	Use "mtn checkout" to set the workspace to the given branch and revision.

canonicalize(filename)

	When used on Windows, make sure that the given file uses "\n" line 
	endings.

check_same_db_contents(db1, db2)

check_{same,different}_stdout(cmd, cmd)
	Compare stdout of the two commands.
	
check_{same,different}_stdout(args, fn1, fn2)
	Compare the output of the two commands, when given the specified args.

write_large_file(filename, size)

	Write a size MB random file.

