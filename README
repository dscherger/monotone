This is a policy branch implementation written with Lua hooks and scripts.
To use it, check it out into your .monotone or copy the files there, and
include policy.lua in your monotonerc.

Other interesting files (all under policy/) are:
  override-write-permissions
    If this file exists, it will be used in place of the allowed writers
    computed from the policy branches. It will be used in addition to the
    normal write-permissions file.

  override-servers
    If this file exists, it will be used in place of the server list
    computed from the policy branches, to determine what servers to
    forward what branches to.

  cache/write-permissions
    A normal write-permissions file, constructed from the combined
    write-permissions of all policy branches.

  cache/all-servers
    This contains lines of
      server "address" "key" "prefix"
    , and is used by the server to know which other servers to forward
    received revisions to. Note that individual certs may not be forwarded
    until a branch cert matching "prefix" is received.

  cache/all-policy-branches
    This contains a list of all used policy branches.

  policy/
    A directory that looks exactly like a normal policy branch.


A policy branch contains the following files:

  write-permissions
    A normal write-permissions file, listing people who should have write
    access to this set of branches.

  servers
    A list of
      server "address" "key"
    or
      server "address" "key" "prefix"
    lines. If "prefix" is absent, it is taken to be whatever was delegated
    to this policy branch. If "prefix" is not under whatever prefix was
    delegated to this branch, that line is ignored.

  delegations
    This determines which policy branches will be used for which branch
    groups. It contains stanzas of
      delegate "prefix" "policy.branch"
         admin "key1"
         admin "key2"
    . Branches equal to "prefix" or matching "prefix.*" will be associated
    with policy branch "policy.branch", and keys "key1", "key2" will be
    allowed to commit revisions to "policy.branch".

  delegations.d/checkouts/prefix/
    This is a checkout of the policy branch to which the prefix is delegated.
    It is NOT present in the policy branch itself, but is created and
    maintained on disk by the policy scripts.

  delegations.d/overrides/prefix/
    There is one directory like this for each prefix delegated to another
    policy branch.

  delegations.d/overrides/prefix/override-servers
  delegations.d/overrides/prefix/override-write-permissions
    This files (if present) allow the policy branch to ignore parts of the
    policy of the branches it delegates to.
