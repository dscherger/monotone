[[!tag migration-auto]]

This page is one of many describing EvaluationFeatures that may be useful when comparing monotone to other similar (and not-so-similar) VCS systems.

# Description

The ability to check and enforce style or other formatting guidelines on log messages

# Supported

Monotone supports the validate_commit_message hook, which is passed a user's intended commit message and details of the revision about to be committed.  Hooks are implemented in lua, and can make arbitrary programmatic assessements of the log message to decide whether to accept or reject it.  The default hook simply rejects empty messages.

Note that these hooks are run on individual developer machines where the commits are done, offline.  These developers could remove the hooks and commit noncompliant messages if they wanted (though of course those messages are signed so this misbehaviour is clearly their own responsibility).

# Example Usage

See also: UsingCerts

# Further Reference

Manual and Tutorial Sections:
 * [ValidationHooks](http://venge.net/monotone/monotone.html#Hooks)

Features and Requirements in other evaluations:
 * FreeBSD [VCSFeatureLogReview](http://wikitest.freebsd.org/VCSFeatureLogReview). Note that the example given talks about "approved by: re" messages.  While these might be appropriate in logs too, monotone has much more extensive and flexible mechanisms to handle approval of revisions for particular purposes and branches. See TrustFoundations and FeatureAccessControl.
