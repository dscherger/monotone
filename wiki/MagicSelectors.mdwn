[[!tag migration-done]]
[[!toc levels=2]]

There are a number of interesting problems and use cases where the current selector syntax isn't quite as useful as might be desirable.   Various forms of "magic" selectors have been suggested.  Some of these allow reasonably basic navigation of parts of the ancestry graph that don't currently have good names, others verge on the truly magical or are useful for very clever selection descriptions.

The most comprehensive original proposal can be found in the mailing list archives, together with some followups in the thread: <http://lists.gnu.org/archive/html/monotone-devel/2005-09/msg00164.html>

There are also various other messages where similar ideas have come up.

Apparently clearcase has something similar, and git has been developing similar notions as well -- someone should track down links to their documentation and add those here.

This page should collect ideas and template definitions for possible magic selectors.  There are also some questions about how selectors should work in total, and whether selectors have any access to "context" from other parts of a compound selector. See also the Selector Syntax discussion in [[BranchNamingConventions]].


# Selector Naming Styles

## Capital Letters

Let's make them all CAPITALIZED
because 1) they're all sort of "magic", and that marks them off from
the point of view of users.  2) we're running out of letters and this
lets us reuse some :-).

Examples:   B: (base),  A: (ancestor) 

## m: for magic

m: is the magical selector, that accesses named revisions by smarter, dynamic, possibly context-sensitive names as the selector value.  Gives a wider, and perhaps more mnemonic, form, with the potential for further syntax confusion if these need to take values of their own as arguments.  At least some of these names could be used plain, with the m: inserted in the same way as others by the selector guessing hook in the same way as email addresses and dates are.

Examples:  m:HEAD, m:BASE, m:ANCESTOR, m:LEFT-ANCESTOR, m:LAST-PROPAGATE


# Individual Selector Suggestions


## <a name="workingcopybase">working copy base</a>

the version in MT/revision.  Requires a working copy.
     Possible letters: B?
     Usage: 'monotone diff -rB:' is equivalent to 'monotone diff'

## <a name="updatetarget">update target</a>

the version(s) that 'monotone update' will take
you to (maybe allow a branch as the selector value, and that
means what 'monotone update -bfoo' does?)  

     Requires a working copy.

     possible letters: U?
     usage: 'monotone diff -rB: -rU:' prints the changes that will be
      applied to the working copy if 'monotone update' is run.

## <a name="branchpoint">branch point</a>

the minimal common ancestor(s) of the current version
and the heads of some other branch.  

     In sh:
       (monotone automate ancestors $(cat MT/revision) &&
        monotone automate heads $BRANCH | monotone automate ancestors -@-) \
       | sort | uniq -d | monotone erase_ancestors -@-
      Requires a working copy.
     possible letters: B? ("branch"), S? ("split")
     usage:
      'monotone diff -rS:net.venge.monotone'
        -- what does this branch have that net.venge.monotone doesn't?
      'monotone diff -rS:net.venge.monotone -rh:net.venge.monotone'
        -- what does net.venge.monotone have that this branch doesn't?

## <a name="predecessor">predecessor</a>

takes a number (defaults to 1), and after evaluating
the rest of the selector, replaces each selected revision with
the set of revisions that are reachable by taking a length-n
walk upwards from that revision.
     possible letters: P? ("predecessor", "parent") A? ("ancestor")

## <a name="successor">successor</a>

same as predecessor, but with a downward walk.
     Possible letters: S? C? ("child"), D? ("descendent")

## <a name="heads">heads</a>

after evaluating the rest of the selector, runs
erase_ancestors on the set so generated.
     possible letters: H?
     (NB: different from non-magic "h:" which gives heads of a branch
     -- this will probably confuse people?)

## <a name="disambiguation">disambiguation</a>

Takes a single number.  When the rest of the
selector does not specify a unique revision, then this can be
used to pick the nth of the revisions that were narrowed down to
(ordered lexicographically, say).
     possible letters: N?  D?
     usage: 'monotone diff -rfoo' <get a message saying that there are
      three revisions matching foo, with a list.  list has a number in
      front of each> 'monotone diff -rfoo/N:2' (to pick the second
      item in that list)
     usage: 'monotone update' <get a message saying there are multiple
      update targets, use 'update -rU:/N:<number>' to pick from
      following list:>

## <a name="initialrevision">initial/root revision</a>

The root of the ancestry tree (for the current revision?)

## <a name="time-based?">time-based?</a>

would it be useful to have "latest of this set", "earliest of this set"
selectors?  obviously time is not normally very useful in our model, but
perhaps it would come in handy sometimes.

# Selector Behaviour
